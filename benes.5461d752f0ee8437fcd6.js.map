{"version":3,"file":"benes.5461d752f0ee8437fcd6.js","mappings":"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","sources":["webpack://react-ts-tailwind-starter/webpack/runtime/chunk loaded","webpack://react-ts-tailwind-starter/./src/common/Colors.tsx","webpack://react-ts-tailwind-starter/./src/common/Permutation.tsx","webpack://react-ts-tailwind-starter/./src/route-benes/BenesNet.tsx","webpack://react-ts-tailwind-starter/./src/route-benes/page.tsx","webpack://react-ts-tailwind-starter/webpack/bootstrap","webpack://react-ts-tailwind-starter/webpack/runtime/define property getters","webpack://react-ts-tailwind-starter/webpack/runtime/hasOwnProperty shorthand","webpack://react-ts-tailwind-starter/webpack/runtime/runtimeId","webpack://react-ts-tailwind-starter/webpack/runtime/jsonp chunk loading","webpack://react-ts-tailwind-starter/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// Based on https://github.com/vv9k/vim-github-dark\nexport let backgroundColor = \"#161b22\";\nexport let inputColor = \"#faa356\";\nexport let outputColor = \"#a2d2fb\";\nexport let midColor = \"#ecf2f8\";\nexport let topColor = \"#7ce38b\";\nexport let bottomColor = \"#cea5fb\";","export default class Permutation {\n  constructor(lut: number[]) {\n    this.lut = [...lut];\n\n    // Compute the inverse.\n    this.invLut = Array<number>(lut.length)\n    for (let i = 0; i < lut.length; i++) {\n      this.invLut[lut[i]] = i;\n    }\n  }\n\n  invert() {\n    let swap = this.invLut;\n    this.invLut = this.lut;\n    this.lut = swap;\n  }\n\n  lut: number[];\n  invLut: number[];\n}\n\nfunction allPerms_recurse(unusedNums: Set<number>, lut: number[], n: number, perms: Permutation[]) {\n  if (lut.length === n) {\n    perms.push(new Permutation(lut));\n    return;\n  }\n\n  let unusedList = Array.from(unusedNums).toSorted();\n\n  for (let unusedNum of unusedList) {\n    lut.push(unusedNum);\n    unusedNums.delete(unusedNum);\n    allPerms_recurse(unusedNums, lut, n, perms);\n    unusedNums.add(unusedNum);\n    lut.pop();\n  }\n}\n\nexport function allPerms(n: number) {\n  let unusedNums = new Set<number>();\n\n  for (let i = 0; i < n; i++) {\n    unusedNums.add(i);\n  }\n\n  let result: Permutation[] = [];\n\n  allPerms_recurse(unusedNums, [], n, result);\n\n  return result;\n}\n","import { useEffect, useLayoutEffect,useRef, useState } from \"react\";\n\nimport useResizeObserver from \"@react-hook/resize-observer\";\nimport * as d3 from \"d3\";\n\nimport { backgroundColor, bottomColor, inputColor, midColor, outputColor, topColor } from \"../common/Colors\";\nimport { KI } from \"../common/katex\";\nimport Permutation from \"../common/Permutation\";\n\ntype Vec2 = [number, number];\n\nclass Box {\n  constructor(left: number, top: number, right: number, bottom: number) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n\n  pad(amount: number) {\n    this.left -= amount;\n    this.top -= amount;\n    this.right += amount;\n    this.bottom += amount;\n  }\n\n  scale(x: d3.ScaleLinear<number, number>, y:d3.ScaleLinear<number, number>) {\n    this.right = x(this.right);\n    this.left = x(this.left);\n    this.top = y(this.top);\n    this.bottom = y(this.bottom);\n  }\n\n  width() {\n    return this.right - this.left;\n  }\n\n  height() {\n    return this.bottom - this.top;\n  }\n\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\n\n\nclass Subnet {\n  constructor(order: number, left: number, top: number, id: string) {\n    this.order = order;\n    this.width = 2*order;\n    this.height = 2**order;\n    this.left = left;\n    this.top = top;\n    this.id = id;\n  }\n\n  isInput(localX: number) {\n    return localX == 0;\n  }\n\n  isOutput(localX: number) {\n    return localX == this.width - 1;\n  }\n\n  isSubOutput(localX: number) {\n    return localX >= this.width/2;\n  }\n\n  isTerminal(localX: number) {\n    return this.isOutput(localX) || this.isInput(localX);\n  }\n\n  globalX(localX: number) {\n    return this.left + localX;\n  }\n\n  globalY(localY: number) {\n    return this.top + localY;\n  }\n\n  topSubnet() {\n    let result = new Subnet(this.order - 1, this.globalX(1), this.globalY(0), this.id+\"0\");\n    return result;\n  }\n\n  bottomSubnet() {\n    let result = new Subnet(this.order - 1, this.globalX(1), this.globalY(this.height/2), this.id+\"1\");\n    return result;\n  }\n\n  extent() {\n    return new Box(this.globalX(0), this.globalY(0), this.globalX(this.width - 1), this.globalY(this.height - 1));\n  }\n\n  id: string;\n\n  order: number;\n\n  width: number;\n  height: number;\n\n  top: number;\n  left: number;\n}\n\nclass Grid {\n  constructor(order: number, vertical: boolean, screenBox: Box) {\n    this.rootSubnet = new Subnet(order, 0, 0, \"\");\n    let extent = this.rootSubnet.extent();\n\n    this.vertical = vertical;\n\n    let [xExtent, yExtent] = this.verticalitySwap([extent.left, extent.right], [extent.top, extent.bottom]);\n    this.xScale = d3.scaleLinear(xExtent, [screenBox.left, screenBox.right]);\n    this.yScale = d3.scaleLinear(yExtent, [screenBox.top, screenBox.bottom]);\n  }\n\n  verticalitySwap<T>(x: T, y: T): [T, T] {\n    if (this.vertical) {\n      return [y, x];\n    } else {\n      return [x, y];\n    }\n  }\n\n  toScreen(gridX: number, gridY: number): Vec2 {\n    let [swappedX, swappedY] = this.verticalitySwap(gridX, gridY);\n    return [this.xScale(swappedX), this.yScale(swappedY)];\n  }\n\n  toScreenBox(box: Box): Box {\n    let result = new Box(0,0,0,0);\n    [result.left, result.top] = this.toScreen(box.left, box.top);\n    [result.right, result.bottom] = this.toScreen(box.right, box.bottom);\n    return result;\n  }\n\n  yFromScreen(screenX: number, screenY: number) {\n    let result = this.vertical ? this.xScale.invert(screenX) : this.yScale.invert(screenY);\n    result = Math.min(this.rootSubnet.height - 1, Math.max(0, Math.round(result)));\n    return result;\n  }\n\n  rootSubnet: Subnet;\n  vertical: boolean;\n  xScale: d3.ScaleLinear<number, number>;\n  yScale: d3.ScaleLinear<number, number>;\n}\nfunction benesTwin(k: number, idx: number) {\n  let modulus = 2 ** (k-1);\n  let result = idx;\n  if (idx >= modulus) {\n    result -= modulus;\n  } else {\n    result += modulus;\n  }\n  return result;\n}\n\nenum EdgeColor {\n  Top = 0,\n  Bottom = 1,\n  None = 2\n}\n\ntype BenesPath = {\n  edgeColors: EdgeColor[],\n  // Vertex indices (not coords!) as indexed from the whole net.\n  verts: number[]\n}\n\nfunction routePermutation(k: number, perm: Permutation): BenesPath[] {\n  // Bottom case.\n  if (k === 1) {\n    if (perm.lut[0] === 0) {\n      // Identity permutation.\n      return [{edgeColors: [EdgeColor.None], verts: [0, 0]}, {edgeColors: [EdgeColor.None], verts: [1, 1]}];\n    } else {\n      // (1 2)\n      return [{edgeColors: [EdgeColor.None], verts: [0, 1]}, {edgeColors: [EdgeColor.None], verts: [1, 0]}];\n    }\n  }\n\n  // Generic case.\n\n  let netHeight = 2 ** k;\n\n  let paths: BenesPath[] = Array(netHeight);\n\n  let unexplored = new Set(Array(netHeight).keys());\n\n  // Color in the vertices. Each loop iteration corresponds to a component\n  // of the routing graph.\n  while (unexplored.size > 0) {\n    // Pop any element from the set. Apparently the APIs don't allow \n    // for this without a for loop.\n    let root: number = -1;\n    for (let el of unexplored) {\n      root = el;\n      break;\n    }\n    if (root < 0) {\n      // Done.\n      break;\n    }\n\n    // Do a BFS starting from the root.\n    let queue: number[] = [];\n    unexplored.delete(root);\n    queue.push(root);\n    paths[root] = {\n      edgeColors: [EdgeColor.Top],\n      verts: [root]\n    };\n    for (;;) {\n      let atVert = queue.shift();\n      if (atVert === undefined) {\n        break;\n      }\n\n      let atColor = paths[atVert].edgeColors[0];\n      let neighborColor = 1-atColor;\n\n      let inputNeighbor = benesTwin(k, atVert);\n      let outputNeighbor = perm.invLut[benesTwin(k, perm.lut[atVert])];\n\n      for (let neighbor of [inputNeighbor, outputNeighbor]) {\n        if (unexplored.has(neighbor)) {\n          unexplored.delete(neighbor);\n          paths[neighbor] = {\n            edgeColors: [neighborColor],\n            verts: [neighbor]\n          };\n          queue.push(neighbor);\n        }\n      }\n    }\n  }\n\n  let luts = [Array(netHeight/2), Array(netHeight/2)];\n  for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n    let subInputIdx = inputIdx % (netHeight/2);\n    luts[paths[inputIdx].edgeColors[0]][subInputIdx] = perm.lut[inputIdx] % (netHeight/2);\n  }\n\n  let subRoutings = luts.map(lut => routePermutation(k-1, new Permutation(lut)));\n\n  for (let globalIdx = 0; globalIdx < netHeight; globalIdx++) {\n    let subInputIdx = globalIdx % (netHeight/2);\n    let globalPath = paths[globalIdx];\n    let edgeColor = globalPath.edgeColors[0];\n    let idxShift = edgeColor*netHeight/2;\n\n    globalPath.edgeColors.push(...subRoutings[edgeColor][subInputIdx].edgeColors);\n    globalPath.verts.push(...subRoutings[edgeColor][subInputIdx].verts.map(v => v + idxShift));\n  }\n\n  // Add the final edges.\n  for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n    let path = paths[inputIdx];\n    path.edgeColors.push(path.edgeColors[0]);\n    path.verts.push(perm.lut[inputIdx]);\n  }\n\n  return paths;\n}\n\nfunction DraggableCircle(props: {onDrag: Function | undefined, onDragStart: Function | undefined, onDragEnd: Function | undefined} & React.SVGProps<SVGCircleElement>) {\n  let ref = useRef(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      let drag = d3.drag();\n      if (props.onDrag) {\n        drag = drag.on(\"drag\", props.onDrag);\n      }\n      if (props.onDragStart) {\n        drag = drag.on(\"start\", props.onDragStart);\n      }\n      if (props.onDragEnd) {\n        drag = drag.on(\"end\", props.onDragEnd);\n      }\n\n      drag(d3.select(ref.current));\n    }\n  });\n\n  return <circle ref={ref} {...props} />\n}\n\n// https://observablehq.com/@harrystevens/roll-your-own-color-palette-interpolator\nfunction interpolatePalette(palette : string[]) {\n  return (t: number) => d3.piecewise(d3.interpolateLab, palette)(Math.min(Math.max(0, t), 1));\n}\n\nexport default function BenesNet({\n  order,\n  vertical = true,\n  doRouting = true,\n  bipartiteColors = false,\n  drawBoxes = true,\n  dottedLines = false\n} : {order: number, vertical?: boolean, doRouting?: boolean, drawBoxes?: boolean, bipartiteColors?: boolean, dottedLines?: boolean})\n{\n  let numInputs = 2**order;\n  let ref = useRef<HTMLDivElement>(null);\n  let [size, setSize] = useState<DOMRect|undefined>();\n  let [perm, setPerm] = useState(new Permutation([...Array(numInputs).keys()]));\n  let [activeDropIndicator, setActiveDropIndicator] = useState<number>(-1);\n  let [dragSource, setDragSource] = useState<number>(-1);\n  \n  let marginTop = 50,\n  marginRight = 50,\n  marginBottom = 50,\n  marginLeft = 50;\n\n  if (doRouting) {\n    if (vertical) {\n      marginBottom += 50;\n    } else {\n      marginRight += 50;\n    }\n  }\n\n  let [prevK, setPrevK] = useState(order);\n  if (prevK != order) {\n    setPrevK(order);\n    setPerm(new Permutation([...Array(numInputs).keys()]));\n    return <></>;\n  }\n\n  let width = size?.width || 0;\n  let height = size?.height || 0;\n\n  useLayoutEffect(() => {\n    setSize(ref.current?.getBoundingClientRect());\n  }, [ref]);\n\n  if (typeof window !== \"undefined\") {\n    useResizeObserver(ref, entry => setSize(entry.contentRect));\n  }\n\n  let screenBox = new Box(marginLeft, marginTop, width - marginRight, height - marginBottom);\n  let grid = new Grid(order, vertical, screenBox);\n\n  let circles: any[] = [];\n\n  function applyTerminalBias(screenX: number, screenY: number, isInput: boolean) {\n    let [x, y] = grid.verticalitySwap(screenX, screenY);\n    x += isInput ? -15 : 15;\n    return grid.verticalitySwap(x, y);\n  }\n\n\n  // Draw grid circles.\n  for (let gridX = 0; gridX < grid.rootSubnet.width; gridX++) {\n    let isInput = grid.rootSubnet.isInput(gridX);\n    let isTerminal = grid.rootSubnet.isTerminal(gridX);\n\n    let color = grid.rootSubnet.isSubOutput(gridX) ? outputColor : inputColor;\n    for (let gridY = 0; gridY < grid.rootSubnet.height; gridY++) {\n      let [screenX, screenY] = grid.toScreen(gridX, gridY);\n\n      if (isTerminal) {\n        [screenX, screenY] = applyTerminalBias(screenX, screenY, isInput);\n      }\n\n\n      circles.push(<circle\n        key={gridX + ',' + gridY}\n        cx={screenX} cy={screenY}\n        stroke=\"none\"\n        r={isTerminal ? 15 : 8} fill={color}  />)\n    }\n  }\n\n  function connectButterfly(lines: any[], prefix: string, extent: Box, topColor: string, bottomColor: string, isRight: boolean) {\n    let colTop, colBot, colFall, colRise = \"\";\n    if (isRight) {\n      colTop = colFall = topColor;\n      colBot = colRise = bottomColor;\n    } else {\n      colTop = colRise = topColor;\n      colBot = colFall = bottomColor;\n    }\n\n    function putLine(postfix: string, fromX: number, fromY: number, toX: number, toY: number, stroke: string) {\n      let [x1, y1] = grid.toScreen(fromX, fromY), [x2, y2] = grid.toScreen(toX, toY);\n      lines.push(<line key={prefix+postfix} {...{ x1, y1, x2, y2 }} strokeOpacity={0.5} stroke={stroke} strokeWidth={2} />);\n    }\n\n    // Top line.\n    putLine(\"t\", extent.left, extent.top, extent.right, extent.top, colTop);\n    // Bottom line.\n    putLine(\"b\", extent.left, extent.bottom, extent.right, extent.bottom, colBot);\n    // Falling line.\n    putLine(\"f\", extent.left, extent.top, extent.right, extent.bottom, colFall);\n    // Rising line.\n    putLine(\"r\", extent.left, extent.bottom, extent.right, extent.top, colRise);\n  }\n\n  function connectBenes(benesLines: any[], benesRects: any[], subnet: Subnet) {\n    if (subnet.order === 1) {\n      connectButterfly(benesLines, subnet.id+\"but\", subnet.extent(), midColor, midColor, false);\n    } else {\n      let topSubnet = subnet.topSubnet();\n      let bottomSubnet = subnet.bottomSubnet();\n\n      // TODO: Scale this adaptively.\n      let padAmount = 20;\n\n      let topBox = grid.toScreenBox(topSubnet.extent());\n      let bottomBox = grid.toScreenBox(bottomSubnet.extent());\n\n      topBox.pad(padAmount);\n      bottomBox.pad(padAmount);\n\n      //benesRects.push(<rect key={\"ar\"+topSubnet.id} rx={10} ry={10} x={topBox.left} y={topBox.top} width={topBox.right - topBox.left} height={topBox.bottom - topBox.top} stroke={\"none\"} fill={backgroundColor} fillOpacity={0.8} />)\n      //benesRects.push(<rect key={\"ar\"+bottomSubnet.id} rx={10} ry={10} x={bottomBox.left} y={bottomBox.top} width={bottomBox.right - bottomBox.left} height={bottomBox.bottom - bottomBox.top} stroke={\"none\"} fill={backgroundColor} fillOpacity={0.8} />)\n\n      benesRects.push(<rect key={\"br\"+topSubnet.id} rx={10} ry={10} x={topBox.left} y={topBox.top} width={topBox.right - topBox.left} height={topBox.bottom - topBox.top} stroke={\"none\"} fill={\"url('#topGrad')\"} fillOpacity={0.2} />)\n      benesRects.push(<rect key={\"br\"+bottomSubnet.id} rx={10} ry={10} x={bottomBox.left} y={bottomBox.top} width={bottomBox.right - bottomBox.left} height={bottomBox.bottom - bottomBox.top} stroke={\"none\"} fill={\"url('#botGrad')\"} fillOpacity={0.2} />)\n\n      // Top subnet.\n      connectBenes(benesLines, benesRects, topSubnet);\n      // Bottom subnet.\n      connectBenes(benesLines, benesRects, bottomSubnet);\n\n      // Draw the butterflies.\n\n      for (let subLocalY = 0; subLocalY < topSubnet.height; subLocalY++) {\n        // Both butterflies have the same vertical extents.\n        let butterfly = new Box(0, 0, 0, 0);\n        butterfly.top = topSubnet.globalY(subLocalY);\n        butterfly.bottom = bottomSubnet.globalY(subLocalY);\n\n        // Left butterfly\n        butterfly.left = subnet.extent().left;\n        butterfly.right = topSubnet.extent().left;\n        connectButterfly(benesLines, subnet.id+\"_butt_\"+subLocalY+\"_\", butterfly, topColor, bottomColor, false);\n\n        // Right butterfly\n        butterfly.right = subnet.extent().right;\n        butterfly.left = topSubnet.extent().right;\n        connectButterfly(benesLines, subnet.id+\"_butb_\"+subLocalY+\"_\", butterfly, topColor, bottomColor, true);\n      }\n    }\n  }\n\n\n  let benesLines: any[] = [];\n  let benesRects: any[] = [];\n  connectBenes(benesLines, benesRects, grid.rootSubnet);\n  \n  function drawRouting(routingLines: any[], routing: BenesPath[], k: number) {\n    let netHeight = 2 ** k;\n    var colorScale = d3.scaleSequential().domain([0,netHeight-1]).interpolator(interpolatePalette([\"#fa7970\", \"#ecf2f8\", \"#faa356\", \"#7ce38b\", \"#a2d2fb\", \"#77bdfb\", \"#cea5fb\"]));\n  \n    for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n      let pathColor = colorScale(inputIdx);\n\n      let path = routing[inputIdx];\n\n      for (let edgeIdx = 0; edgeIdx < path.edgeColors.length; edgeIdx++) {\n        let [x1, y1] = grid.toScreen(edgeIdx, path.verts[edgeIdx]);\n        let [x2, y2] = grid.toScreen(edgeIdx+1, path.verts[edgeIdx+1]);\n\n        let edgeColor = path.edgeColors[edgeIdx];\n        let lineColor = midColor;\n        if (!bipartiteColors) {\n          lineColor = pathColor.toString();\n        } else if (edgeColor === EdgeColor.Top) {\n          lineColor = topColor;\n        } else if (edgeColor === EdgeColor.Bottom) {\n          lineColor = bottomColor;\n        }\n\n        routingLines.push(<line\n          key={`rt_${inputIdx}_${edgeIdx}`}\n          x1={x1} y1={y1} x2={x2} y2={y2}\n          fill=\"none\"\n          strokeWidth=\"6\"\n          strokeDasharray={dottedLines ? \"10,30\" : \"\"}\n          stroke={lineColor}\n        >\n          {dottedLines &&\n            <animate\n              attributeName=\"stroke-dashoffset\"\n              values=\"40;0\"\n              dur=\"3s\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\" />\n          }\n        </line>);\n      }\n    }\n  }\n\n\n  let routing = routePermutation(order, perm);\n\n  let routingLines: any[] = [];\n  drawRouting(routingLines, routing, order);\n\n  let labelOffset = 20;\n\n  function drawInputLabels(inputLabels: any[]) {\n    for (let inputIdx = 0; inputIdx < grid.rootSubnet.height; inputIdx++) {\n      let [x, y] = applyTerminalBias(...grid.toScreen(0, inputIdx), true);\n\n      inputLabels.push(\n        <div \n        className=\"absolute pointer-events-none bold\"\n        key={\"il_\" + inputIdx}\n        style={{\n          transform: `translate(-50%, -50%) translate(${x}px, ${y}px)`,\n          color: backgroundColor\n        }}>\n          <KI>{`${inputIdx+1}`}</KI>\n        </div>);\n    }\n  }\n\n  function drawOutputLabels(outputLabels: any[], prescriptions: any[]) {\n    for (let preimage = 0; preimage < grid.rootSubnet.height; preimage++) {\n      let outputIdx = perm.lut[preimage];\n      let [x, y] = applyTerminalBias(...grid.toScreen(grid.rootSubnet.extent().right, outputIdx), false);\n\n\n      outputLabels.push(\n        <div \n        key={\"ol_\" + preimage.toString()}\n        className=\"absolute pointer-events-none\" \n        style={{\n          transform: `translate(-50%, -50%) translate(${x}px, ${y}px)`,\n          color: backgroundColor\n        }}>\n          <KI>{`${outputIdx+1}`}</KI>\n        </div>);\n\n      let dropIdx = (outputIdx===0 ? 0 : grid.rootSubnet.height);\n      let dropStyle: React.CSSProperties = {\n        opacity: (activeDropIndicator === dropIdx) ? 1 : 0\n      };\n\n      dropStyle[vertical?\"left\":\"top\"] = `${outputIdx===0?\"-\":\"\"}10px`;\n\n      let drop = <div className=\"relative w-0 h-0\">\n        <div\n          key={`drop_${dropIdx}`} \n          className={`absolute transition bg-cyan-400 shrink-0 ${vertical ? \"h-12\" : \"w-12\"} ${vertical ? \"w-0.5\" : \"h-0.5\"}`}\n          style={dropStyle}\n        />\n      </div>;\n\n\n      let predrop = undefined;\n      let postdrop = undefined;\n\n      // Both of these cannot occur at the same time because we have at least two outputs.\n      if (outputIdx === 0) {\n        predrop = drop;\n      } else if (outputIdx === grid.rootSubnet.height - 1) {\n        postdrop = drop;\n      }\n\n      function labelStyle(x: number, y: number): React.CSSProperties {\n        return {\n          transform: vertical ? `translate(-50%, 0) translate(${x}px, ${y + labelOffset}px)` :\n          `translate(0, -50%) translate(${x + labelOffset}px, ${y}px)`,\n          flexDirection: vertical ? \"row\" : \"column\"\n        };  \n      }\n\n      prescriptions.push(\n        <div\n          key={\"ob_\" + preimage.toString()}\n          className=\"absolute flex transition-transform duration-200\"\n          style={labelStyle(x, y)}>\n          {predrop}\n          <div\n            className=\"flex items-center bg-white/0 hover:bg-white/30 pushed:bg-white/50 transition rounded-sm cursor-grab p-1 active:cursor-grabbing\"\n            draggable=\"true\"\n            onDragStart={(e: any) => {\n              setDragSource(outputIdx);\n            }}\n            style={{ flexDirection: vertical ? \"column\" : \"row\" }}>\n            <div className={`px-1 ${vertical ? \"-rotate-90\" : \"rotate-180\"}`}><KI>{`\\\\mapsto`}</KI></div>\n            <KI>{`${preimage + 1}`}</KI>\n          </div>\n          {postdrop}\n        </div>\n      );\n\n      // Drop indicator\n      if (outputIdx < grid.rootSubnet.height - 1) {\n        [x, y] = applyTerminalBias(...grid.toScreen(grid.rootSubnet.extent().right, outputIdx + 0.5), false);\n        dropIdx = outputIdx+1;\n        outputLabels.push(<div key={`drop_${dropIdx}`} data-before={outputIdx}\n          className={`absolute transition bg-cyan-400 shrink-0 ${vertical ? \"h-12\" : \"w-12\"} ${vertical ? \"w-0.5\" : \"h-0.5\"}`}\n\n          style={{opacity: activeDropIndicator === outputIdx+1 ? 1 : 0, ...labelStyle(x, y)}}\n        />);\n      }\n    }\n  }\n\n  let labels: any[] = [];\n  let prescriptions: any[] = [];\n  drawInputLabels(labels);\n  drawOutputLabels(labels, prescriptions);\n  if (doRouting) {\n    labels.push(...prescriptions);\n  }\n\n  let svg = <svg className=\"absolute\" width={width} height={height}>\n    <filter id='noiseFilter'>\n      <feTurbulence\n        type='fractalNoise'\n        baseFrequency='3.76'\n        numOctaves='3'\n        stitchTiles='stitch' />\n    </filter>\n    <defs>\n    <linearGradient id=\"topGrad\" x1=\"10%\" y1=\"100%\" x2=\"90%\" y2=\"0%\">\n      <stop offset=\"10%\" stopColor={topColor} stopOpacity={0.8} />\n      <stop offset=\"90%\" stopColor={topColor} stopOpacity={0.2} />\n    </linearGradient>\n    <linearGradient id=\"botGrad\" x1=\"10%\" y1=\"100%\" x2=\"90%\" y2=\"0%\">\n      <stop offset=\"10%\" stopColor={bottomColor} stopOpacity={0.8} />\n      <stop offset=\"90%\" stopColor={bottomColor} stopOpacity={0.2} />\n    </linearGradient>\n  </defs>\n\n    {drawBoxes && benesRects}\n    {benesLines}\n    {doRouting && routingLines}\n    <g fill=\"white\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n      {circles}\n    </g>\n  </svg>;\n\n\n  function handleDrop(e: React.DragEvent<HTMLDivElement>) {\n    setActiveDropIndicator(-1);\n\n    let fromIdx = dragSource;\n    let toIdx = grid.yFromScreen(e.clientX, e.clientY);\n    let invLut = [...perm.invLut];\n    let move = invLut[fromIdx];\n    invLut.splice(fromIdx, 1);\n    invLut.splice(toIdx, 0, move);\n    let newPerm = new Permutation(invLut);\n    newPerm.invert();\n    setPerm(newPerm);\n  }\n\n  function handleDragOver(e: React.DragEvent<HTMLDivElement>) {\n    let fromIdx = dragSource;\n    let toIdx = grid.yFromScreen(e.clientX, e.clientY);\n\n    console.log(e.dataTransfer.getData(\"outputIdx\"), \"is\", fromIdx, toIdx);\n    e.preventDefault();\n    e.clientY;\n\n    if (toIdx < fromIdx) {\n      setActiveDropIndicator(toIdx);\n    } else if (toIdx > fromIdx) {\n      setActiveDropIndicator(toIdx + 1);\n    } else {\n      setActiveDropIndicator(-1);\n    }\n  }\n\n  return <div className=\"flex items-stretch w-full h-full p-1\" style={{ background: backgroundColor, flexDirection: vertical ? \"column\" : \"row\"}}>\n    <div className=\"flex grow items-stretch p-1\">\n      <div ref={ref} className=\"relative flex grow p-0 m-0 overflow-hidden\" onDragOver={handleDragOver} onDragLeave={() => setActiveDropIndicator(-1)} onDrop={handleDrop}>\n        {svg}\n        {labels}\n      </div>\n    </div>\n  </div>\n    ;\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport '@/styles/index.css';\n\nimport { useState } from \"react\";\nimport BenesNet from \"./BenesNet\";\nimport NoSsr from \"../common/NoSsr\";\nimport { Splitter, SplitterPanel } from 'primereact/splitter';\nimport { InputNumber, InputNumberValueChangeEvent } from 'primereact/inputnumber';\nimport { PrimeReactProvider } from 'primereact/api';\nimport \"primereact/resources/themes/lara-dark-teal/theme.css\";\nimport \"primereact/resources/primereact.css\";\nimport { InputSwitch, InputSwitchChangeEvent } from \"primereact/inputswitch\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { initMacros, KI } from \"../common/katex\";\nimport { inputColor, outputColor } from \"../common/Colors\";\n\nfunction Main() {\n  let [benesOrder, setBenesOrder] = useState(3);\n  let [vertical, setVertical] = useState(true);\n  let [doRouting, setDoRouting] = useState(false);\n  let [drawBoxes, setDrawBoxes] = useState(true);\n  let [bipartiteColors, setBipartiteColors] = useState(false);\n  let [dottedLines, setDottedLines] = useState(false);\n\n  return <Splitter className=\"h-dvh w-full\">\n    <SplitterPanel size={75} className=\"overflow-hidden\">\n      <BenesNet order={benesOrder} vertical={vertical} doRouting={doRouting} drawBoxes={drawBoxes} bipartiteColors={bipartiteColors} dottedLines={dottedLines} />\n    </SplitterPanel>\n    <SplitterPanel size={25} className=\"\">\n      <div className=\"pl-7 pr-7 space-y-4 overflow-scroll\">\n        <h1 className=\"text-xl font-bold my-4 font-italic\">Beneš {doRouting ? \"Routing\" : \"Nets\"}</h1>\n\n        <p>\n          This is an interactive demo of the so-called <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline text-sky-300 hover:text-sky-200\" href=\"https://eng.libretexts.org/Bookshelves/Computer_Science/Programming_and_Computation_Fundamentals/Mathematics_for_Computer_Science_(Lehman_Leighton_and_Meyer)/02%3A_Structures/10%3A_Communication_Networks/10.09%3A_Benes_Network\">Beneš networks</a>.\n        </p>\n\n        <p>\n        They have <span style={{color: inputColor}}><KI>n</KI> \"input nodes\"</span> and <span style={{color: outputColor}}><KI>n</KI> \"output nodes\"</span> (indicated as big circles). In total, they have <KI>2 n \\log n</KI> nodes and a maximum degree of <KI>4</KI>.\n        </p>\n\n        <p>\n          They have a recursive structure, as indicated by the boxes. That is why <KI>n=2^k</KI> is a power of two. We refer to <KI>k</KI> as the order.\n        </p>\n\n        {/* Comment out the switch for drawing the boxes.*/ /*\n\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Draw boxes:</label>\n          <InputSwitch checked={drawBoxes} onChange={(e) => setDrawBoxes(e.value)} />\n        </div>\n        */}\n        \n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"benesOrder\">Order <KI>k</KI>:</label>\n\n\n          <InputNumber className=\"w-full\" name=\"benesOrder\" value={benesOrder} onValueChange={(e: InputNumberValueChangeEvent) => {\n            let val = e.value;\n            if (val && !isNaN(val)) {\n              setBenesOrder(val)\n            }\n          }} mode=\"decimal\" showButtons min={1} max={6} />\n        </div>\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Layout direction:</label>\n\n          <SelectButton className=\"w-full\" value={vertical ? \"Vertical\" : \"Horizontal\"} onChange={(e: any) => setVertical(e.value == \"Vertical\")} options={[\"Vertical\", \"Horizontal\"]} />\n        </div>\n\n\n        <p>\n        Beneš nets satisfy the following property: Any bijection <KI>\\pi \\in S_n</KI> from its <span style={{color: inputColor}}><KI>n</KI> input nodes</span> to its <span style={{color: outputColor}}><KI>n</KI> output nodes</span> can be realized by vertex-disjoint paths.\n        Try it!\n        </p>\n\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Show routes:</label>\n          <InputSwitch checked={doRouting} onChange={(e) => setDoRouting(e.value)} />\n        </div>\n\n        {doRouting &&\n        <><p>\n        Click on any prescription arrow <KI>{\"\\\\mapsto\"}</KI> and drag it to configure the bijection <KI>\\pi</KI>.\n      </p>\n\n      <div className=\"text-sm\">\n        <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Path coloring:</label>\n\n        <SelectButton className=\"w-full\" value={bipartiteColors ? \"Bipartite\" : \"Pathwise\"} onChange={(e: any) => setBipartiteColors(e.value == \"Bipartite\")} options={[\"Bipartite\", \"Pathwise\"]} />\n      </div>\n\n      \n      <div className=\"text-sm\">\n        <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Lines:</label>\n\n        <SelectButton className=\"w-full\" value={dottedLines ? \"Dotted\" : \"Simple\"} onChange={(e: any) => setDottedLines(e.value == \"Dotted\")} options={[\"Simple\", \"Dotted\"]} />\n      </div>\n        </>\n\n        }\n\n      \n      </div>\n    </SplitterPanel>\n  </Splitter>;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\n\ninitMacros();\nroot.render(\n  <React.StrictMode>\n      <PrimeReactProvider>\n        <Main />\n      </PrimeReactProvider>\n  </React.StrictMode>\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 222;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t222: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ts_tailwind_starter\"] = self[\"webpackChunkreact_ts_tailwind_starter\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [967,810,76], () => (__webpack_require__(5012)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","backgroundColor","inputColor","outputColor","midColor","topColor","bottomColor","Permutation","constructor","lut","this","invLut","Array","length","i","invert","swap","Box","left","top","right","bottom","pad","amount","scale","x","y","width","height","Subnet","order","id","isInput","localX","isOutput","isSubOutput","isTerminal","globalX","globalY","localY","topSubnet","bottomSubnet","extent","Grid","vertical","screenBox","rootSubnet","xExtent","yExtent","verticalitySwap","xScale","d3","yScale","toScreen","gridX","gridY","swappedX","swappedY","toScreenBox","box","result","yFromScreen","screenX","screenY","Math","min","max","round","benesTwin","k","idx","modulus","EdgeColor","routePermutation","perm","edgeColors","None","verts","netHeight","paths","unexplored","Set","keys","size","root","el","queue","delete","push","Top","atVert","shift","undefined","neighborColor","inputNeighbor","outputNeighbor","neighbor","has","luts","inputIdx","subInputIdx","subRoutings","map","globalIdx","globalPath","edgeColor","idxShift","v","path","BenesNet","_ref","doRouting","bipartiteColors","drawBoxes","dottedLines","numInputs","ref","useRef","setSize","useState","setPerm","activeDropIndicator","setActiveDropIndicator","dragSource","setDragSource","marginRight","marginBottom","prevK","setPrevK","_jsx","_Fragment","useLayoutEffect","current","getBoundingClientRect","window","useResizeObserver","entry","contentRect","grid","circles","applyTerminalBias","color","cx","cy","stroke","r","fill","connectButterfly","lines","prefix","isRight","colTop","colBot","colFall","colRise","putLine","postfix","fromX","fromY","toX","toY","x1","y1","x2","y2","strokeOpacity","strokeWidth","benesLines","benesRects","connectBenes","subnet","padAmount","topBox","bottomBox","rx","ry","fillOpacity","subLocalY","butterfly","routingLines","routing","palette","colorScale","domain","interpolator","t","pathColor","edgeIdx","lineColor","Bottom","toString","strokeDasharray","children","attributeName","values","dur","calcMode","repeatCount","drawRouting","labels","prescriptions","inputLabels","className","style","transform","KI","drawInputLabels","outputLabels","preimage","outputIdx","dropIdx","dropStyle","opacity","predrop","postdrop","drop","labelStyle","flexDirection","_jsxs","draggable","onDragStart","e","drawOutputLabels","svg","type","baseFrequency","numOctaves","stitchTiles","offset","stopColor","stopOpacity","background","onDragOver","fromIdx","toIdx","clientX","clientY","preventDefault","onDragLeave","onDrop","move","splice","newPerm","Main","benesOrder","setBenesOrder","setVertical","setDoRouting","setDrawBoxes","setBipartiteColors","setDottedLines","Splitter","SplitterPanel","target","rel","href","htmlFor","InputNumber","name","value","onValueChange","val","isNaN","mode","showButtons","SelectButton","onChange","options","InputSwitch","checked","ReactDOM","document","getElementById","initMacros","render","React","PrimeReactProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","every","key","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}