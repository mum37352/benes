{"version":3,"file":"common.d95222c65829c07a8a9b.js","mappings":"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","sources":["webpack://react-ts-tailwind-starter/./src/common/resizeObserver.ts","webpack://react-ts-tailwind-starter/./src/common/GraphCanvas.tsx","webpack://react-ts-tailwind-starter/./src/common/FullscreenButton.tsx","webpack://react-ts-tailwind-starter/./src/common/Toolbar.tsx","webpack://react-ts-tailwind-starter/./src/reduction/buckets.tsx","webpack://react-ts-tailwind-starter/./src/common/Grid.ts","webpack://react-ts-tailwind-starter/./src/common/Permutation.tsx","webpack://react-ts-tailwind-starter/./src/common/Colors.tsx","webpack://react-ts-tailwind-starter/./src/reduction/Graph.ts","webpack://react-ts-tailwind-starter/./src/common/katex.tsx","webpack://react-ts-tailwind-starter/./src/common/mathUtils.ts","webpack://react-ts-tailwind-starter/./src/common/PermWidget.tsx","webpack://react-ts-tailwind-starter/./src/common/NodeDrawing.tsx","webpack://react-ts-tailwind-starter/./src/reduction/CompatibilityGraph.tsx","webpack://react-ts-tailwind-starter/./src/reduction/GraphEditor.tsx"],"sourcesContent":["import useResizeObserver, { UseResizeObserverCallback } from \"@react-hook/resize-observer\";\nimport { useLayoutEffect, useRef, useState } from \"react\";\n\nexport type FlushingResizeObserverRet = {\n  enableTransition: boolean,\n  size: DOMRect|undefined\n}\n\n// When the element gets resized, we want a way to flush css transitions.\n// So we roll our own wrapper hook.\n// The returned boolean tells the usage code if it should enable CSS transitions at the moment.\nexport function useFlushingResizeObserver<T extends Element>(\n  target: React.RefObject<T> | React.ForwardedRef<T>\n): FlushingResizeObserverRet\n{\n  const [transitionFlushCounter, setTransitionFlushCounter] = useState(0);\n  const counterRef = useRef(0); // track current value for the setTimeout closure\n  let [size, setSize] = useState<DOMRect|undefined>();\n\n  function flushTransitions() {\n    setTransitionFlushCounter((prev) => {\n      let next = prev + 1;\n      counterRef.current = next;\n      return next;\n    });\n\n    setTimeout(() => {\n      setTransitionFlushCounter((prev) => {\n          const next = prev - 1;\n          counterRef.current = next;\n          return next;\n        });\n    }, 200);\n  }\n\n  useLayoutEffect(() => {\n    setSize(target.current?.getBoundingClientRect());\n  }, [target]);\n\n  useResizeObserver<T>(target, entry => {\n    flushTransitions();\n    setSize(entry.contentRect);\n  });\n\n  return {\n    enableTransition: transitionFlushCounter === 0,\n    size\n  };\n}","import { RefObject, useRef } from \"react\";\nimport { Vec2 } from \"./mathUtils\";\nimport { useFlushingResizeObserver } from \"./resizeObserver\";\n\nexport type GraphCanvas = {\n  ref: RefObject<HTMLDivElement|null>,\n  dummyRectRef: RefObject<SVGRectElement|null>,\n  screenWidth: number,\n  screenHeight: number,\n  enableTransition: boolean,\n  clientToSvg: (x: number, y: number) => Vec2,\n  getEventPoint: (e: React.MouseEvent) => Vec2\n}\n\nexport function useGraphCanvas() {\n  let ref = useRef<HTMLDivElement>(null);\n  let dummyRectRef = useRef<SVGRectElement>(null);\n  let {size, enableTransition} = useFlushingResizeObserver(ref);\n\n  let screenWidth = size?.width || 0;\n  let screenHeight = size?.height || 0;\n\n  function clientToSvg(x: number, y: number): Vec2 {\n    let svgPoint = new DOMPoint(x, y);\n    svgPoint = svgPoint.matrixTransform(dummyRectRef.current?.getScreenCTM()?.inverse());\n    return [svgPoint.x, svgPoint.y];\n  }\n\n  function getEventPoint(e: React.MouseEvent) {\n    return clientToSvg(e.clientX, e.clientY);\n  }\n\n  let cnv: GraphCanvas = {\n    clientToSvg,\n    getEventPoint,\n    ref,\n    dummyRectRef,\n    screenWidth,\n    screenHeight,\n    enableTransition\n  };\n\n  return cnv;\n}","import { Maximize, Minimize2 } from \"lucide-react\";\nimport { Button } from \"primereact/button\";\nimport { useState } from \"react\";\n\nexport function FullscreenButton() {\n  let [isFullscreen, setIsFullscreen] = useState(false);\n\n  function onClick() {\n    if (!isFullscreen) {\n      let elem = document.documentElement;\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n        setIsFullscreen(true);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n        setIsFullscreen(false);\n      }\n    }\n  }\n\n  return <div className=\"fixed z-50 px-3 py-2 text-gray-800 rounded-xl shadow-lg bottom-4 right-4\">\n          <Button icon={isFullscreen ? <Minimize2 size={18} /> : <Maximize size={18} />}\n        onClick={onClick} />\n      </div>;\n}","import { Dropdown } from \"primereact/dropdown\";\nimport { Toolbar } from \"primereact/toolbar\";\nimport { useRef, useState } from \"react\";\nimport { Pencil, MousePointerClick, Trash, Move, Share2, Ruler, Eraser, Paintbrush } from 'lucide-react';\nimport { Button } from \"primereact/button\";\n\nexport type ConstructionMode = 'nodes' | 'edges' | 'guidelines';\nexport type ConstructionAction = 'insert' | 'delete' | 'drag';\n\nconst modeOptions = [\n  { label: 'Nodes', value: 'nodes', icon: <Share2 className=\"w-4 h-4 mr-2\" /> },\n  { label: 'Edges', value: 'edges', icon: <Ruler className=\"w-4 h-4 mr-2\" /> },\n  { label: 'Guidelines', value: 'guidelines', icon: <Move className=\"w-4 h-4 mr-2\" /> }\n];\n\nconst actionOptions = {\n  nodes: [\n    { label: 'Insert', value: 'insert', icon: <MousePointerClick className=\"w-4 h-4 mr-2\" /> },\n    { label: 'Delete', value: 'delete', icon: <Trash className=\"w-4 h-4 mr-2\" /> },\n    { label: 'Drag', value: 'drag', icon: <Move className=\"w-4 h-4 mr-2\" /> }\n  ],\n  edges: [\n    { label: 'Insert', value: 'insert', icon: <MousePointerClick className=\"w-4 h-4 mr-2\" /> },\n    { label: 'Delete', value: 'delete', icon: <Trash className=\"w-4 h-4 mr-2\" /> }\n  ],\n  guidelines: [\n    { label: 'Insert', value: 'insert', icon: <MousePointerClick className=\"w-4 h-4 mr-2\" /> },\n    { label: 'Delete', value: 'delete', icon: <Trash className=\"w-4 h-4 mr-2\" /> },\n    { label: 'Drag', value: 'drag', icon: <Move className=\"w-4 h-4 mr-2\" /> }\n  ]\n};\n\nexport function OldToolbar({\n  onChange, mode, action\n}: {\n  onChange: (mode: ConstructionMode, action: ConstructionAction) => void, mode: ConstructionMode, action: ConstructionAction\n}) {\n  let handleModeChange = (e: { value: ConstructionMode }) => {\n    // Reset action if drag becomes invalid\n    if (e.value === 'edges' && action === 'drag') {\n      onChange(e.value, 'insert');\n    } else {\n      onChange(e.value, action);\n    }\n  };\n\n  let handleActionChange = (e: { value: ConstructionAction }) => {\n    onChange(mode, e.value);\n  };\n\n  let startContents = <Pencil className=\"w-5 h-5 text-primary\" />;\n  \n  let modeTemplate = (option: any) => (\n          <div className=\"flex items-center\">\n            {option.icon}\n            {option.label}\n          </div>\n        );\n  const modeDropdown = (\n    <div className=\"flex items-center gap-2\">\n      <span className=\"font-bold\">Mode:</span>\n      <Dropdown\n        value={mode}\n        options={modeOptions}\n        onChange={handleModeChange}\n        optionLabel=\"label\"\n        valueTemplate={modeTemplate}\n        itemTemplate={modeTemplate}\n      />\n    </div>\n  );\n\n  let actionTemplate = (option: any) => (\n          <div className=\"flex items-center\">\n            {option.icon}\n            {option.label}\n          </div>\n        );\n  let actionDropdown = (\n    <div className=\"flex items-center gap-2\">\n      <span className=\"font-bold\">Action:</span>\n      <Dropdown\n        value={action}\n        options={actionOptions[mode]}\n        onChange={handleActionChange}\n        optionLabel=\"label\"\n        valueTemplate={actionTemplate}\n        itemTemplate={actionTemplate}\n      />\n    </div>\n  );\n\n  let centerContents = (\n    <div className=\"flex gap-3 items-center\">\n      {modeDropdown}\n\n      {actionDropdown}\n    </div>\n  );\n\n  return <Toolbar start={startContents} center={centerContents} />;\n}\n\nexport type ToolSel = 'insert' | 'delete' | 'drag' | 'paint';\n\ntype Tool = {\n  name: ToolSel;\n  icon: React.JSX.Element;\n  hotkey: string;\n};\n\n// Tool definitions\nlet allTools: Tool[] = [\n  { name: 'insert', icon: <Pencil size={18} />, hotkey: 'default' },\n  { name: 'delete', icon: <Eraser size={18} />, hotkey: 'Alt' },\n  { name: 'drag', icon: <Move size={18} />, hotkey: 'Ctrl' },\n  { name: 'paint', icon: <Paintbrush size={18} />, hotkey: 'Shift' },\n];\n\n\nexport function GraphToolbar({ activeTool, onChange, tools }: {activeTool: string, onChange: (name: ToolSel) => void, tools: ToolSel[]}) {\n  let toolButtons = [];\n\n  for (let toolSel of tools) {\n    let tool = allTools.find(t => (t.name === toolSel));\n    if (tool) {\n      toolButtons.push(<Button\n        key={tool.name}\n        className={`p-button-rounded p-button-text ${activeTool === tool.name ? 'ring-2 ring-blue-500 ring-offset-2 ring-offset-white' : ''}`}\n        onClick={() => onChange(tool.name)}\n        tooltip={`${tool.name[0].toUpperCase() + tool.name.slice(1)} (Hotkey: ${tool.hotkey})`}\n      >\n        {tool.icon}\n      </Button>);\n    }\n  }\n\n  let centerContents = <div className=\"flex gap-2 p-2 rounded shadow\">\n    {toolButtons}\n  </div>;\n\n  return <Toolbar center={centerContents} />;\n}\n\nexport function GraphToolbarPanel({ activeTool, onChange, paintBrush = false, children }: \n  { activeTool: string, onChange: (name: ToolSel) => void, children: React.ReactNode, paintBrush?: boolean}) {\n\n  let divRef = useRef<HTMLDivElement>(null);\n\n  let tools: ToolSel[] = [\"insert\", \"delete\", \"drag\"];\n\n  if (paintBrush) {\n    tools.push(\"paint\");\n  }\n\n  return <div ref={divRef} className=\"flex flex-col w-full h-full\"\n    tabIndex={0}\n    onKeyDown={(e) => {\n      if (e.key === 'Control') { onChange(\"drag\"); e.preventDefault(); }\n      if (e.key === 'Alt') { onChange(\"delete\"); e.preventDefault(); }\n      if (e.key === 'Shift' && paintBrush) { onChange(\"paint\"); e.preventDefault(); }\n    }}\n    onKeyUp={(e) => {onChange(\"insert\"); e.preventDefault()}}\n    onMouseEnter={() => { console.log(\"entering\", divRef.current); divRef.current?.focus(); }}\n    onMouseLeave={() => divRef.current?.blur()}>\n    <GraphToolbar tools={tools} activeTool={activeTool} onChange={onChange} />\n    {children}\n  </div>;\n}","// Imagine a vertical ice cone at the origin (more precisely, a V shape in 2D)\n// Given the left edge of the cone as a unit vector (Y up), find\n// the radius of a ball around (0, 1) that is inscribed precisely by the cone.\n\nimport { computeGridLayout, computeGridMargins, Grid } from \"@/common/Grid\";\nimport { useFlushingResizeObserver } from \"@/common/resizeObserver\";\nimport { MouseEventHandler, RefObject, useRef } from \"react\";\nimport { ColGraph, ColGraphNode } from \"./Graph\";\nimport { backgroundColor, getColorScale, MainGradient } from \"@/common/Colors\";\nimport { CenteredKI } from \"@/common/NodeDrawing\";\nimport { Box, length2d, lengthSq2d, mod, normalize2d, rotatePoint, sampleUniformUnitDisk, Vec2 } from \"@/common/mathUtils\";\nimport FastPoissonDiskSampling from 'fast-2d-poisson-disk-sampling';\nimport { GraphCanvas, useGraphCanvas } from \"@/common/GraphCanvas\";\n\n// I think we had to do this using rulers and compasses in Gymnasium.\nfunction fitCircleIntoIceCone(coneX: number, coneY: number) {\n  // Compute cosine using the dot product.\n  let cosine = coneY;\n\n  return Math.sqrt(1 - cosine*cosine);\n}\n\n// Just like the circle fitting, except our ellipse now has an aspect ratio.\n// Returns rx and ry of the ellipse. \nexport function fitEllipseIntoIceCone(asp: number, angle: number): Vec2 {\n  // First, compute the unit normal vector representation for the\n  // left side of the V shape.\n  let coneX = -Math.sin(angle);\n  let coneY = Math.cos(angle);\n\n  // Stretch the problem vertically so it reduces to the familiar circle problem.\n  coneY *= asp;\n\n  let rx = fitCircleIntoIceCone(...normalize2d(coneX, coneY));\n\n  return [rx, rx/asp];\n}\n\n\nexport type BucketCanvas = GraphCanvas & {\n  grid: Grid,\n  coreCircleDiam: number,\n  zoom: number,\n  dummyRectRef: RefObject<SVGRectElement|null>,\n  vertical: boolean,\n  graph: ColGraph\n}\n\nexport function useBucketCanvas(colGraph: ColGraph) {\n  let graphCnv = useGraphCanvas();\n\n  let coreCircleDiam = colGraph.coreCircleDiam();\n\n  let margin = computeGridMargins(false, false);\n\n  // For fence post reasons, we add 1 to the numGuidelines instead of adding 2. Same for inputs\n  let gridWidths = computeGridLayout(graphCnv.screenWidth, [margin.left, 2*coreCircleDiam, margin.right]);\n  let gridHeights = computeGridLayout(graphCnv.screenHeight, [margin.top, 2*coreCircleDiam, margin.bottom]);\n\n  let graphBox = new Box(gridWidths[0], gridHeights[0], gridWidths[0] + gridWidths[1], gridHeights[0] + gridHeights[1]);\n\n  let grid = new Grid(new Box(-1.5*coreCircleDiam, -1.5*coreCircleDiam, 1.5*coreCircleDiam, 1.5*coreCircleDiam), false, graphBox);\n\n  let zoom = Math.min(gridWidths[1]/(2*coreCircleDiam), gridHeights[1]/(2*coreCircleDiam)) / 100;\n\n  let vertical = false;\n\n  let cnv: BucketCanvas = {\n    ...graphCnv,\n    grid,\n    coreCircleDiam,\n    zoom,\n    vertical,\n    graph: colGraph\n  };\n\n  return cnv;\n}\n\nexport function genBucketsJsx(cnv: BucketCanvas, graphCanvas: React.ReactElement<SVGElement>[], labels: React.ReactElement[],\n  onMouseDown?: MouseEventHandler<HTMLDivElement>, onMouseUp?: MouseEventHandler<HTMLDivElement>, onMouseMove?: MouseEventHandler<HTMLDivElement>\n) {\n  let svg = <svg className=\"absolute\" width={cnv.screenWidth} height={cnv.screenHeight} >\n    <rect ref={cnv.dummyRectRef} opacity={0} x=\"0\" y=\"0\" width=\"0\" height=\"0\" stroke=\"none\" fill=\"none\" />\n    {graphCanvas}\n  </svg>;\n  \n  return <div className=\"flex items-stretch w-full h-full p-1\" style={{ flexDirection: cnv.vertical ? \"column\" : \"row\"}}>\n    <div className=\"flex grow items-stretch p-1\" onMouseDown={onMouseDown} onMouseMove={onMouseMove} onMouseUp={onMouseUp}>\n      <div ref={cnv.ref} className=\"relative flex grow p-0 m-0 overflow-hidden\" >\n        {svg}\n        {labels}\n      </div>\n    </div>\n  </div>;\n}\n\nfunction bucketAngle(graph: ColGraph) {\n  return 2 * Math.PI / graph.cliqueSize;\n}\n\nexport function computeCanonicalBucketEllipse(graph: ColGraph): Vec2 {\n  let mainAngle = bucketAngle(graph);\n  let ellipseAsp = 2.0;\n  let coneAngle = Math.min(mainAngle * 0.8, 0.3 * Math.PI);\n  let [rx, ry] = fitEllipseIntoIceCone(ellipseAsp, coneAngle);\n  let coreCircleDiam = graph.coreCircleDiam();\n  rx *= coreCircleDiam;\n  ry *= coreCircleDiam;\n\n  return [rx, ry]\n}\n\nexport function bucketScale(graph: ColGraph) {\n  let colorScale = getColorScale(graph.cliqueSize);\n  return colorScale;\n}\n\nexport function drawBuckets(cnv: BucketCanvas, canvas: React.ReactElement<SVGElement>[], labels: React.ReactElement[]) {\n  let colorScale = bucketScale(cnv.graph);\n  function gradientId(cliqueIdx: number) {\n    return \"grad_\" + cliqueIdx;\n  }\n\n  let [rx, ry] = computeCanonicalBucketEllipse(cnv.graph)\n  let sectorAngle = bucketAngle(cnv.graph);\n\n  for (let i = 0; i < cnv.graph.cliqueSize; i++) {\n    let centerAngle = i * sectorAngle;\n\n    canvas.push(<MainGradient id={gradientId(i)} color={colorScale(i)} />);\n\n    let rotString = `rotate(${(centerAngle * 180) / Math.PI})`;\n    let [x, y] = cnv.grid.toScreen(cnv.coreCircleDiam * Math.sin(centerAngle), -cnv.coreCircleDiam * Math.cos(centerAngle));\n\n    canvas.push(<ellipse cx={0} cy={-cnv.coreCircleDiam} rx={rx} ry={ry} fill={`url('#${gradientId(i)}')`} transform={`${cnv.grid.toScreenCss()} ${rotString}`} />);\n    labels.push(<CenteredKI key={\"bucketlab_\" + i} zoom={cnv.zoom} color={backgroundColor} x={x} y={y}>{`V_{${i + 1}}`}</CenteredKI>)\n  }\n}\n\nexport function computeNodeBucket(colGraph: ColGraph, nodeId: string) {\n  let node = colGraph.graph.getNodeAttributes(nodeId);\n\n  let angle = Math.atan2(-node.y, node.x);\n\n  let sectorAngle = bucketAngle(colGraph);\n\n  let firstBoundary = Math.PI/2 + sectorAngle/2;\n\n  let sectorIdx = mod(Math.floor(-(angle - firstBoundary)/sectorAngle), colGraph.cliqueSize);\n\n  return sectorIdx;\n}\n\nexport function mapCanonicalEllipseToBucketArea(graph: ColGraph, bucketIdx: number, x: number, y: number) {\n  y -= graph.coreCircleDiam();\n\n  let sectorAngle = bucketAngle(graph);\n  return rotatePoint(x, y, -bucketIdx*sectorAngle);\n}\n\nfunction ellipticPoint(rx: number, ry: number): Vec2 {\n    let [r, theta] = sampleUniformUnitDisk();\n    let x = rx * r * Math.cos(theta);\n    let y = -ry * r * Math.sin(theta);\n    return [x, y];\n}\n\nexport function randomPointInBucket(graph: ColGraph, bucketIdx: number) {\n  let [rx, ry] = computeCanonicalBucketEllipse(graph);\n\n  let [x, y] = ellipticPoint(rx, ry);\n  return mapCanonicalEllipseToBucketArea(graph, bucketIdx, x, y);\n}\n\nexport function ellipticPoissonDiskSet(n: number, rx: number, ry: number): Vec2[] {\n  let result: Vec2[] = [];\n\n  if (n === 1) {\n    result.push(ellipticPoint(rx, ry));\n  } else if (n > 1) {\n    // A maximal Poisson disk set is a set of points distributed so that no two points are\n    // closer than a given minimum distance d, and no more points can be added without\n    // violating this condition. In other words, it's a densely packed Poisson disk distribution.\n    //\n    // To cover an area A with such a set of N points, we must have: N * pi * d^2 >= A.\n    // This ensures that the total area \"covered\" by disks of radius d is at least as large as A.\n    //\n    // In particular, when d = 1, this simplifies to: N >= A / pi.\n    //\n    // In our case, we want to fill an ellipse with at least n points. The area of an ellipse\n    // with radii [r * rx, r * ry] is given by: A = pi * rx * ry * r^2.\n    //\n    // Substituting into the inequality A / pi >= n gives:\n    //\n    //     pi * rx * ry * r^2 / pi >= n\n    //     => r^2 >= n / (rx * ry)\n    //     => r >= sqrt(n / (rx * ry))\n    //\n    // This ensures N >= A/pi >= n.\n    //\n    // We define R := r * sqrt(3) to slightly increase the area. This compensates for the fact that\n    // Bridson's Poisson disk sampling algorithm uses rejection sampling and does NOT guarantee\n    // a truly maximal set - some valid points may be skipped.\n    //\n    // Therefore, to reliably fit n Poisson-distributed points in an ellipse, we allocate a grid\n    // with width R * rx and height R * ry.\n    let R = Math.sqrt(3 * n / (rx*ry));\n    let w = R*rx;\n    let h = R*ry;\n    let sampler = new FastPoissonDiskSampling({\n      shape: [w, h],\n      radius: 1\n    });\n    let points = sampler.fill();\n\n    // Apply a transform to the points so as to center them, and stretch them so the ellipse becomes a circle.\n    for (let i = 0; i < points.length; i++) {\n      points[i][0] -= w/2;\n      points[i][1] -= h/2;\n      points[i][0] /= rx;\n      points[i][1] /= ry;\n    }\n\n    points = points.sort((a, b) => lengthSq2d(...a) - lengthSq2d(...b)).slice(0, n);\n    let biggest = length2d(...points.at(-1)!) * 1.1;\n    \n    for (let i = 0; i < points.length; i++) {\n      result.push([points[i][0]*rx/biggest, points[i][1]*ry/biggest]);\n    }\n\n    // Finally, just to be extra safe, use a uniform random fallback.\n    while (result.length < n) {\n      result.push(ellipticPoint(rx, ry));\n    }\n  }\n\n  return result;\n}\n","import * as d3 from \"d3\";\nimport { correctIdx } from \"./Permutation\";\nimport { GraphNodeType } from \"./NodeDrawing\";\nimport { Box, Vec2 } from \"./mathUtils\";\n\n\nexport class Subnet {\n  constructor(order: number, left: number, top: number, id: string) {\n    this.order = order;\n    this.width = 2*order;\n    this.height = 2**order;\n    this.left = left;\n    this.top = top;\n    this.id = id;\n  }\n\n\n  isInput(localX: number) {\n    return localX == 0;\n  }\n\n  isOutput(localX: number) {\n    return localX == this.width - 1;\n  }\n\n  type(localX: number) {\n    if (this.isInput(localX)) {\n      return GraphNodeType.Input;\n    } else if (this.isOutput(localX)) {\n      return GraphNodeType.Output; \n    } else {\n      return GraphNodeType.Internal;\n    }\n  }\n\n  isSubOutput(localX: number) {\n    return localX >= this.width/2;\n  }\n\n  subType(localX: number) {\n    return this.isSubOutput(localX) ? GraphNodeType.Input : GraphNodeType.Output;\n  }\n\n  isTerminal(localX: number) {\n    return this.isOutput(localX) || this.isInput(localX);\n  }\n\n  globalX(localX: number) {\n    return this.left + localX;\n  }\n\n  globalY(localY: number) {\n    return this.top + localY;\n  }\n\n  topSubnet() {\n    let result = new Subnet(this.order - 1, this.globalX(1), this.globalY(0), this.id+\"0\");\n    return result;\n  }\n\n  bottomSubnet() {\n    let result = new Subnet(this.order - 1, this.globalX(1), this.globalY(this.height/2), this.id+\"1\");\n    return result;\n  }\n\n  extent() {\n    return new Box(this.globalX(0), this.globalY(0), this.globalX(this.width - 1), this.globalY(this.height - 1));\n  }\n\n  id: string;\n\n  order: number;\n\n  width: number;\n  height: number;\n\n  top: number;\n  left: number;\n}\n\nexport class Grid {\n  constructor(extent: Box, vertical: boolean, screenBox: Box) {\n    this.vertical = vertical;\n    this.extent = extent;\n\n    let [xExtent, yExtent] = this.verticalitySwap([extent.left, extent.right], [extent.top, extent.bottom]);\n    this.xScale = d3.scaleLinear(xExtent, [screenBox.left, screenBox.right]);\n    this.yScale = d3.scaleLinear(yExtent, [screenBox.top, screenBox.bottom]);\n  }\n\n  verticalitySwap<T>(x: T, y: T): [T, T] {\n    if (this.vertical) {\n      return [y, x];\n    } else {\n      return [x, y];\n    }\n  }\n\n  toScreenDims(width: number, height: number): Vec2 {\n    let [X, Y] = this.toScreen(width, height);\n    let [x, y] = this.toScreen(0, 0);\n    return [X-x, Y-y];\n  }\n\n  toScreen(gridX: number, gridY: number): Vec2 {\n    let [swappedX, swappedY] = this.verticalitySwap(gridX, gridY);\n    return [this.xScale(swappedX), this.yScale(swappedY)];\n  }\n\n  toScreenCss(): string {\n    let xoff = this.xScale(0);\n    let yoff = this.yScale(0);\n\n    let xfac = this.xScale(1) - xoff;\n    let yfac = this.yScale(1) - yoff;\n\n    return `translate(${xoff} ${yoff}) scale(${xfac} ${yfac})`;\n  }\n\n  toScreenBox(box: Box): Box {\n    let result = new Box(0,0,0,0);\n    [result.left, result.top] = this.toScreen(box.left, box.top);\n    [result.right, result.bottom] = this.toScreen(box.right, box.bottom);\n    return result;\n  }\n\n  xFromScreen(screenX: number, screenY: number, roundToInt: boolean = true) {\n    let result = !this.vertical ? this.xScale.invert(screenX) : this.yScale.invert(screenY);\n    if (roundToInt) {\n      // TODO: This fails if extent.left is not 0.\n      result = correctIdx(result, this.extent.right + 1)\n    }\n    return result;\n  }\n\n  yFromScreen(screenX: number, screenY: number, roundToInt: boolean = true) {\n    let result = this.vertical ? this.xScale.invert(screenX) : this.yScale.invert(screenY);\n    if (roundToInt) {\n      // TODO: This fails if extent.top is not 0.\n      result = correctIdx(result, this.extent.bottom + 1);\n    }\n\n    console.log(screenY);\n    return result;\n  }\n\n  cellWidth() {\n    return this.xScale(1) - this.xScale(0);\n  }\n\n  cellHeight() {\n    return this.yScale(1) - this.yScale(0);\n  }\n\n  extent: Box;\n  vertical: boolean;\n  xScale: d3.ScaleLinear<number, number>;\n  yScale: d3.ScaleLinear<number, number>;\n}\n\nexport class BenesGrid extends Grid {\n  constructor(order: number, vertical: boolean, screenBox: Box) {\n    let rootSubnet = new Subnet(order, 0, 0, \"\");\n    super(rootSubnet.extent(), vertical, screenBox);\n    this.rootSubnet = rootSubnet;\n  }\n\n  rootSubnet: Subnet;\n}\n\nexport function computeGridLayout(totalSize: number, relativeSizes: number[]): number[] {\n  let sum = relativeSizes.reduce((acc, addend) => {\n    return acc + addend;\n  }, 0);\n\n  let ratio = totalSize / sum;\n\n  let result = relativeSizes.map(x => x * ratio);\n  return result;\n}\n\nexport type Margin = {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number\n};\n\n// Compute the size of the margin relative to the cell size.\nexport function computeGridMargins(doRouting: boolean, vertical: boolean): Margin {\n  let margin = {\n    left: 0.5,\n    top: 1.0,\n    right: 0.5,\n    bottom: 1.0\n  }\n\n  if (doRouting) {\n    if (vertical) {\n      margin.bottom += 0.5;\n    } else {\n      margin.right += 0.5;\n    }\n  }\n\n  return margin;\n}","export default class Permutation {\n  constructor(lut: number[]) {\n    this.lut = [...lut];\n\n    // Compute the inverse.\n    this.invLut = Array<number>(lut.length)\n    for (let i = 0; i < lut.length; i++) {\n      this.invLut[lut[i]] = i;\n    }\n  }\n\n  invert() {\n    let swap = this.invLut;\n    this.invLut = this.lut;\n    this.lut = swap;\n  }\n\n  toLatex(asColumnVector = true) {\n    if (asColumnVector) {\n      let result = \"\\\\begin{pmatrix}\\n\";\n\n      for (let i = 0; i < this.lut.length; i++) {\n        result += `${this.lut[i]+1} ${i < this.lut.length - 1 ? \"\\\\\\\\\" : \"\"}\\n`;\n      }\n      result += \"\\\\end{pmatrix}\";\n      return result;\n    } else {\n      let domain = this.lut.map((_, i) => i + 1);\n      let image = this.lut.map(i => i + 1);\n\n      let topRow = domain.join(' & ');\n      let bottomRow = image.join(' & ');\n\n      return `\\\\begin{pmatrix}\\n${topRow} \\\\\\\\\\n${bottomRow}\\n\\\\end{pmatrix}`;\n    }\n  }\n\n  lut: number[];\n  invLut: number[];\n}\n\nexport function clipToRange(x: number, min: number, max: number) {\n  return Math.min(max, Math.max(min, x));\n}\n\nexport function correctIdx(rawIdx: number, height: number) {\n  return clipToRange(Math.round(rawIdx), 0, height - 1);\n}\n\nfunction allPerms_recurse(unusedNums: Set<number>, lut: number[], n: number, perms: Permutation[]) {\n  if (lut.length === n) {\n    perms.push(new Permutation(lut));\n    return;\n  }\n\n  let unusedList = Array.from(unusedNums).toSorted();\n\n  for (let unusedNum of unusedList) {\n    lut.push(unusedNum);\n    unusedNums.delete(unusedNum);\n    allPerms_recurse(unusedNums, lut, n, perms);\n    unusedNums.add(unusedNum);\n    lut.pop();\n  }\n}\n\nexport function allPerms(n: number) {\n  let unusedNums = new Set<number>();\n\n  for (let i = 0; i < n; i++) {\n    unusedNums.add(i);\n  }\n\n  let result: Permutation[] = [];\n\n  allPerms_recurse(unusedNums, [], n, result);\n\n  return result;\n}\n","import * as d3 from \"d3\";\n\n// Based on https://github.com/vv9k/vim-github-dark\nexport let backgroundColor = \"#161b22\";\nexport let inputColor = \"#faa356\";\nexport let outputColor = \"#a2d2fb\";\nexport let midColor = \"#ecf2f8\";\nexport let topColor = \"#7ce38b\";\nexport let bottomColor = \"#cea5fb\";\nexport let redColor = \"#fa7970\";\n\n// https://observablehq.com/@harrystevens/roll-your-own-color-palette-interpolator\nfunction interpolatePalette(palette : string[]) {\n  return (t: number) => d3.piecewise(d3.interpolateLab, palette)(Math.min(Math.max(0, t), 1));\n}\n\nexport function getColorScale(resolution: number) {\n  return d3.scaleSequential().domain([0,resolution]).interpolator(interpolatePalette([\"#fa7970\", \"#ecf2f8\", \"#faa356\", \"#7ce38b\", \"#a2d2fb\", \"#77bdfb\", \"#cea5fb\"]));\n}\n\nexport function MainGradient({color, id}: {color: string, id: string}) {\n  return <linearGradient id={id} x1=\"10%\" y1=\"100%\" x2=\"90%\" y2=\"0%\">\n      <stop offset=\"10%\" stopColor={color} stopOpacity={0.8} />\n      <stop offset=\"90%\" stopColor={color} stopOpacity={0.2} />\n    </linearGradient>;\n}","// TODO: Deduplicate w/ the construction page.\nimport { bottomColor, midColor, topColor } from \"@/common/Colors\";\nimport { computeCanonicalBucketEllipse, computeNodeBucket, ellipticPoissonDiskSet, mapCanonicalEllipseToBucketArea, randomPointInBucket } from \"./buckets\";\nimport { foreachNaryString } from \"@/common/mathUtils\";\nimport Graph from \"graphology\";\n\n\nexport enum TriadColor {\n  Col1, Col2, Col3\n}\n\nexport let triadColorLut = [TriadColor.Col1, TriadColor.Col2, TriadColor.Col3];\n\nexport function triadColorToColor(col: TriadColor) {\n  let color = \"\";\n\n  // TODO: Cannibalizes the existing vars, not very clean.\n  if (col === TriadColor.Col1) {\n    color = topColor;\n  } else if (col === TriadColor.Col2) {\n    color = midColor;\n  } else if (col === TriadColor.Col3) {\n    color = bottomColor;\n  }\n  \n  return color;\n}\n\nexport interface ColGraphNode {\n  color: TriadColor,\n  x: number,\n  y: number\n}\n\nexport enum EdgeType {\n  Equality,\n  Disequality\n};\n\nexport interface ColGraphEdge {\n  type: EdgeType\n}\n\nexport class ColGraph {\n  constructor(cliqueSize: number) {\n    this.nextId = 0;\n\n    this.graph = new Graph({ type: 'undirected' });\n\n    this.cliqueSize = cliqueSize;\n  }\n\n  getNextId() {\n    return this.nextId++;\n  }\n\n\n  coreCircleDiam() {\n    return Math.max(1, (Math.sqrt(this.cliqueSize*1.6)));\n  }\n\n  nextId: number;\n\n  cliqueSize: number;\n\n  graph: Graph<ColGraphNode, ColGraphEdge>;\n}\n\ntype CompatGraphNode = {\n  x: number,\n  y: number,\n  coloring: number[],\n  proper: boolean,\n  bucketIdx: number\n}\n\nexport class CompatGraph {\n  mkNodeId(bucketIdx: number, coloring: number[]) {\n    return bucketIdx.toString() + \"-\" + coloring.toString();\n  }\n\n  constructor(colGraph: ColGraph) {\n    this.colGraph = colGraph;\n    let result: Graph<CompatGraphNode> = new Graph({ type: 'undirected' });\n\n    this.buckets = Array.from({ length: colGraph.cliqueSize }, () => []);\n\n    colGraph.graph.forEachNode((nodeId, attributes) => {\n      let bucketIdx = computeNodeBucket(colGraph, nodeId);\n\n      if (bucketIdx >= 0) {\n        this.buckets[bucketIdx].push(nodeId);\n      }\n    });\n\n    // Next, iterate over all possible colorings and add nodes.\n    let [rx, ry] = computeCanonicalBucketEllipse(colGraph);\n    for (let bucketIdx = 0; bucketIdx < colGraph.cliqueSize; bucketIdx++) {\n      let bucket = this.buckets[bucketIdx];\n\n      let points = ellipticPoissonDiskSet(3**bucket.length, rx, ry);\n\n      foreachNaryString(bucket.length, 3, (coloring: number[]) => {\n        let [x, y] = points.pop()!;\n        [x, y] = mapCanonicalEllipseToBucketArea(colGraph, bucketIdx, x, y);\n\n        // Check if these ternary string defines a proper 3-coloring.\n        let proper = true;\n        for (let i = 0; i < bucket.length && proper; i++) {\n          for (let j = i + 1; j < bucket.length && proper; j++) {\n            if (coloring[i] === coloring[j] && colGraph.graph.hasEdge(bucket[i], bucket[j])) {\n              proper = false;\n            }\n          }\n        }\n\n        result.addNode(this.mkNodeId(bucketIdx, coloring), { x, y, proper, bucketIdx, coloring: [...coloring] });\n        return false;\n      });\n    }\n\n    // Connect up the nodes.\n    let nodes = result.nodes();\n    for (let i = 0; i < nodes.length; i++) {\n      for (let j = i + 1; j < nodes.length; j++) {\n        let nodeA = nodes[i];\n        let nodeB = nodes[j];\n\n        let compatible = true;\n\n        let dataA = result.getNodeAttributes(nodeA);\n        let dataB = result.getNodeAttributes(nodeB);\n\n        if (dataA.bucketIdx === dataB.bucketIdx) {\n          compatible = false;\n        }\n\n        if (!dataA.proper || !dataB.proper) {\n          compatible = false;\n        }\n\n        if (compatible) {\n          let bucketA = this.buckets[dataA.bucketIdx];\n          let bucketB = this.buckets[dataB.bucketIdx];\n\n          for (let i = 0; i < bucketA.length && compatible; i++) {\n            for (let j = 0; j < bucketB.length && compatible; j++) {\n              if (dataA.coloring[i] === dataB.coloring[j] && colGraph.graph.hasEdge(bucketA[i], bucketB[j])) {\n                compatible = false;\n              }\n            }\n          }\n        }\n\n        if (compatible) {\n          result.addEdge(nodeA, nodeB);\n        }\n      }\n    }\n\n    this.activeSubgraph = new Array(this.buckets.length).fill(null);\n    for (let bucketIdx = 0; bucketIdx < this.buckets.length; bucketIdx++) {\n      let bucket = this.buckets[bucketIdx];\n      let coloring: number[] = [];\n      for (let i = 0; i < bucket.length; i++) {\n        let node = bucket[i];\n        coloring.push(colGraph.graph.getNodeAttribute(node, \"color\"));\n      }\n      this.activeSubgraph[bucketIdx] = this.mkNodeId(bucketIdx, coloring);\n    }\n\n    this.graph = result;\n  }\n\n  recomputeActiveSubgraph(bucketIdx: number) {\n    let bucket = this.buckets[bucketIdx];\n\n    let coloring: number[] = new Array(bucket.length).fill(0);\n    for (let i = 0; i < bucket.length; i++) {\n      coloring[i] = this.colGraph.graph.getNodeAttributes(bucket[i]).color;\n    }\n    this.activeSubgraph[bucketIdx] = this.mkNodeId(bucketIdx, coloring);\n  }\n\n  colGraph: ColGraph;\n  graph: Graph<CompatGraphNode>;\n  buckets: string[][];\n\n  // For each bucket, store a selected compatibility node.\n  // Contains the node IDs.\n  activeSubgraph: string[];\n}\n","import React from \"react\";\n\nimport katex from \"katex\";\n\nimport macrosTex from \"../macros.tex\";\n\nimport 'katex/dist/katex.min.css';\n\nlet macros = {};\n\n// We don't use https://github.com/MatejBransky/react-katex?tab=readme-ov-file because it needs\n// useState, which doesn't work in React server components.\n// We don't use https://github.com/talyssonoc/react-katex/tree/master/packages/react-katex because it\n// doesn't allow for custom options (which we need to avoid reparsing our macros).\n\n// Called once, see https://github.com/KaTeX/KaTeX/issues/2915\nexport function initMacros() {\n  katex.renderToString(macrosTex, {macros, globalGroup: true});\n}\n\nfunction KI_({ children } : { children: React.ReactNode }) {\n  let html = katex.renderToString(\n    children?.toString() || \"\",\n    {macros});\n  return <span className=\"text-md\" dangerouslySetInnerHTML={{__html: html}} />;\n}\n\nfunction KB_({ children } : { children: React.ReactNode }) {\n  let html = katex.renderToString(\n    children?.toString() || \"\",\n    {displayMode: true, macros});\n  return <span className=\"text-md\" dangerouslySetInnerHTML={{__html: html}} />;\n}\n\nexport let KI = React.memo(KI_);\nexport let KB = React.memo(KB_);","\nexport type Vec2 = [number, number];\n\nexport function lengthSq2d(x: number, y: number) {\n  return x*x+y*y;\n}\n\nexport function length2d(x: number, y: number) {\n  return Math.sqrt(lengthSq2d(x, y));\n}\n\nexport function normalize2d(x: number, y: number): Vec2 {\n  let length = length2d(x, y);\n  return [x/length, y/length];\n}\n\nexport function mod(n: number, m: number): number {\n  return ((n % m) + m) % m;\n}\n\n\nexport class Box {\n  constructor(left: number, top: number, right: number, bottom: number) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n\n  pad(amount: number) {\n    this.left -= amount;\n    this.top -= amount;\n    this.right += amount;\n    this.bottom += amount;\n  }\n\n  scale(x: d3.ScaleLinear<number, number>, y:d3.ScaleLinear<number, number>) {\n    this.right = x(this.right);\n    this.left = x(this.left);\n    this.top = y(this.top);\n    this.bottom = y(this.bottom);\n  }\n\n  width() {\n    return this.right - this.left;\n  }\n\n  height() {\n    return this.bottom - this.top;\n  }\n\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport function foreachNaryString(length: number, base: number, doSomething: (digits: number[])=>boolean): boolean {\n  let digits = new Array(length).fill(0);\n\n  // Foreach subset.\n  for (;;) {\n    if (doSomething(digits)) {\n      // The operation succeeded, we can stop.\n      return true;\n    }\n\n    // Try to increment the counter.\n    let incSucc = false;\n    for (let i = 0; i < length && !incSucc; i++) {\n      digits[i] = (digits[i] + 1) % base;\n      if (digits[i] != 0) {\n        incSucc = true;\n      }\n    }\n    if (!incSucc) {\n      // The counter overflowed, we have seen all subsets.\n      return false;\n    }\n  }\n}\n\nexport function sampleUniformUnitDisk(): [number, number] {\n  let u = Math.random();\n  let v = Math.random();\n\n  // The joint cartesian PDF is p'(x,y)=1/pi. After applying\n  // a change of variables, the polar PDF is p(r, theta) = r/pi.\n  // Therefore, the marginal density is p(r) = 2r and the conditional\n  // density is p(theta|r) = 1/(2*pi).\n  // The CDFs are therefore P(r) = r^2 and P(theta|r) = theta/(2*pi).\n  // Use P^-1(r) to sample r,\n  let r = Math.sqrt(u);\n  // and use P^-1(theta|r) to sample theta\n  let theta = 2*Math.PI*v;\n\n  return [r, theta];\n}\n\n// Y down, but counterclockwise (sigh).\nexport function rotatePoint(x: number, y: number, angleRadians: number): Vec2 {\n  const cos = Math.cos(angleRadians);\n  const sin = -Math.sin(angleRadians);\n\n  const xNew = x * cos - y * sin;\n  const yNew = x * sin + y * cos;\n\n  return [xNew, yNew];\n}","import { useRef, useState } from \"react\";\nimport Permutation from \"./Permutation\";\nimport { KI } from \"./katex\";\nimport { Vec2 } from \"./mathUtils\";\n\nexport let refFontSize = 15;\n\ntype PermWidgetProps = {\n  vertical: boolean,\n  perm: Permutation,\n  zoom: number,\n  onPermChanged: null | ((newPerm: Permutation) => void),\n  xyToIdx: (x: number, y: number) => number,\n  // Warning: This is currently being called with fractional idx for the\n  // drop indicators.\n  idxToXY: (idx: number) => Vec2,\n  enableTransition: boolean,\n  onHover: (pathIdx: number) => void,\n  onLeave: (pathIdx: number) => void\n}\n\nexport default function PermWidget({vertical=false, perm, zoom, onPermChanged, xyToIdx, idxToXY, enableTransition, onHover, onLeave} : PermWidgetProps)\n{\n  let overlayRef = useRef<HTMLDivElement>(null);\n  let [activeDropIndicator, setActiveDropIndicator] = useState<number>(-1);\n  let [dragSource, setDragSource] = useState<number>(-1);\n\n  function getRelCoords(x: number, y: number): [number, number] {\n    let clientRect = overlayRef.current?.getBoundingClientRect();\n    if (clientRect) {\n      x -= clientRect.left;\n      y -= clientRect.top;\n    }\n    return [x, y];\n  }\n\n  function handleDrop(e: React.DragEvent<HTMLDivElement>) {\n    setActiveDropIndicator(-1);\n\n    let fromIdx = dragSource;\n    let toIdx = xyToIdx(...getRelCoords(e.clientX, e.clientY));\n    let invLut = [...perm.invLut];\n    let move = invLut[fromIdx];\n    invLut.splice(fromIdx, 1);\n    invLut.splice(toIdx, 0, move);\n    let newPerm = new Permutation(invLut);\n    newPerm.invert();\n    setDragSource(-1);\n    overlayRef.current?.classList.add(\"pointer-events-none\");\n    if (onPermChanged) {\n      onPermChanged(newPerm);\n    }\n\n    onHover(fromIdx);\n  }\n\n  function handleDragOver(e: React.DragEvent<HTMLDivElement>) {\n    let fromIdx = dragSource;\n    let toIdx = xyToIdx(...getRelCoords(e.clientX, e.clientY));\n\n    e.preventDefault();\n    e.clientY;\n\n    console.log(toIdx);\n\n    if (toIdx < fromIdx) {\n      setActiveDropIndicator(toIdx);\n    } else if (toIdx > fromIdx) {\n      setActiveDropIndicator(toIdx + 1);\n    } else {\n      setActiveDropIndicator(-1);\n    }\n  }\n\n  let height = perm.lut.length;\n  let labelOffset = zoom*20;\n\n  function drawPermArrows(prescriptions: any[], dropIndicators: any[]) {\n    for (let preimage = 0; preimage < height; preimage++) {\n      let dropIndicatorDims: React.CSSProperties = {};\n\n      if (vertical) {\n        dropIndicatorDims.height = 60 * zoom;\n        dropIndicatorDims.width = 2 * zoom;\n      } else {\n        dropIndicatorDims.width = 60 * zoom;\n        dropIndicatorDims.height = 2 * zoom;\n      }\n\n      let outputIdx = perm.lut[preimage];\n      let [x, y] = idxToXY(outputIdx);\n\n\n      let dropIdx = (outputIdx===0 ? 0 : height);\n      let dropStyle: React.CSSProperties = {\n        opacity: (activeDropIndicator === dropIdx) ? 1 : 0,\n        ...dropIndicatorDims\n      };\n      \n      dropStyle[vertical?\"left\":\"top\"] = `${outputIdx===0?\"-\":\"\"}10px`;\n\n      let drop = <div className=\"relative w-0 h-0\">\n        <div\n          key={`drop_${dropIdx}`} \n          className={`absolute transition bg-cyan-400 shrink-0 ${vertical ? \"h-12\" : \"w-12\"} ${vertical ? \"w-0.5\" : \"h-0.5\"}`}\n          style={dropStyle}\n        />\n      </div>;\n\n\n      let predrop = undefined;\n      let postdrop = undefined;\n\n      // Both of these cannot occur at the same time because we have at least two outputs.\n      if (outputIdx === 0) {\n        predrop = drop;\n      } else if (outputIdx === height - 1) {\n        postdrop = drop;\n      }\n\n      function labelStyle(x: number, y: number): React.CSSProperties {\n        return {\n          transform: vertical ? `translate(-50%, 0) translate(${x}px, ${y + labelOffset}px)` :\n          `translate(0, -50%) translate(${x + labelOffset}px, ${y}px)`,\n          flexDirection: vertical ? \"row\" : \"column\"\n        };\n      }\n\n      prescriptions.push(\n        <div\n          key={\"ob_\" + preimage.toString()}\n          className={`absolute flex  ${enableTransition ? \"transition-transform duration-200\" : \"\"}`}\n          style={labelStyle(x, y)}\n        >\n          {predrop}\n          <div\n            className={`flex items-center bg-white/0 hover:bg-white/30 pushed:bg-white/50 transition rounded-sm cursor-grab p-1 active:cursor-grabbing`}\n            draggable=\"true\"\n            onDragStart={(e: any) => {\n              // HACK: Chrome aborts the drag when we change styles right away. (Firefox does not)\n              // Inspired by https://github.com/react-dnd/react-dnd/issues/1085\n              setTimeout(() => overlayRef.current?.classList.remove(\"pointer-events-none\"), 0);\n              setDragSource(outputIdx);\n            }}\n            onMouseEnter={() => onHover(preimage)}\n            onMouseLeave={() => onLeave(preimage)}\n            style={{ fontSize: refFontSize*zoom, flexDirection: vertical ? \"column\" : \"row\" }}\n          >\n            <div className={`px-1 ${vertical ? \"-rotate-90\" : \"rotate-180\"}`}><KI>{`\\\\mapsto`}</KI></div>\n            <KI>{`${preimage + 1}`}</KI>\n          </div>\n          {postdrop}\n        </div>\n      );\n\n      // Drop indicator\n      if (outputIdx < height - 1) {\n        [x, y] = idxToXY(outputIdx + 0.5);\n        dropIdx = outputIdx + 1;\n        let style = {\n          opacity: activeDropIndicator === outputIdx + 1 ? 1 : 0, ...labelStyle(x, y),\n          ...dropIndicatorDims\n        };\n\n        dropIndicators.push(<div key={`drop_${dropIdx}`} data-before={outputIdx}\n          className={`absolute transition bg-cyan-400 shrink-0`}\n\n          style={style}\n        />);\n      }\n    }\n  }\n\n  let prescriptions: any[] = [];\n  let dropIndicators: any[] = [];\n  // For some reason, React seems to recreate nodes if we don't have some basic sorting,\n  // which is why keep an extra list for the drop indicators. Otherwise, the animations\n  // will break.\n  drawPermArrows(prescriptions, dropIndicators);\n\n  return <>\n    {prescriptions}\n    {dropIndicators}\n    <div ref={overlayRef} className={`absolute top-0 left-0 w-full h-full pointer-events-none`} onDragOver={handleDragOver} onDragLeave={() => setActiveDropIndicator(-1)} onDrop={handleDrop}>\n    </div>\n  </>;\n}\n","import { backgroundColor, inputColor, midColor, outputColor } from \"./Colors\";\nimport { Grid } from \"./Grid\";\nimport { KI } from \"./katex\";\n\n// Connecting the lines to the center of the circle makes them hard to follow (our terminal nodes are big),\n// so we offset the input and output circles by a small terminal bias.\nexport function applyTerminalBias(zoom: number, grid: Grid, screenX: number, screenY: number, isInput: boolean) {\n  let [x, y] = grid.verticalitySwap(screenX, screenY);\n  x += (isInput ? -6 : 6) * zoom;\n  return grid.verticalitySwap(x, y);\n}\n\n\nexport enum GraphNodeType {\n  Input,\n  Output,\n  Internal\n}\n\nexport function graphNodeTypeToColor(colorType: GraphNodeType) {\n  let color = midColor;\n  if (colorType === GraphNodeType.Input) {\n    color = inputColor;\n  } else if (colorType === GraphNodeType.Output) {\n    color = outputColor;\n  }\n\n  return color;\n}\n\nexport function CenteredKI({x, y, key, zoom, children, color}: \n  {x: number, y: number, key: string, zoom: number, children: React.ReactNode, color?: string, transform?: string}) {\n  return <div\n        key={\"lab_\" + key}\n        className=\"absolute pointer-events-none\"\n        style={{\n          fontSize: 15 * zoom,\n          transform: `translate(-50%, -50%) translate(${x}px, ${y}px)`,\n          color: color\n        }}>\n        <KI>{children}</KI>\n      </div>;\n}\n\nexport function drawNode(zoom: number, grid: Grid, type: GraphNodeType, color: string, gridX: number, gridY: number, svgList: any[], overlayList: any[], props: object = {}) {\n  let [screenX, screenY] = grid.toScreen(gridX, gridY);\n  let isTerminal = (type !== GraphNodeType.Internal);\n\n  if (isTerminal) {\n    [screenX, screenY] = applyTerminalBias(zoom, grid, screenX, screenY, type === GraphNodeType.Input);\n  }\n\n\n  let key = gridX + ',' + gridY;\n\n  svgList.push(<circle {...props}\n    stroke=\"none\" \n    key={key}\n    cx={screenX} cy={screenY}\n    r={(isTerminal ? 15 : 8) * zoom} fill={color} />);\n\n  if (isTerminal) {\n    let number = gridY + 1;\n    overlayList.push(<CenteredKI color={backgroundColor} x={screenX} y={screenY} key={\"lab_\" + key} zoom={zoom}>{`${number}`}</CenteredKI>);\n  }\n}\n","import { ToolSel } from \"@/common/Toolbar\";\nimport { ColGraph, CompatGraph, ColGraphNode, triadColorLut } from \"./Graph\";\nimport { useEffect, useReducer, useRef, useState } from \"react\";\nimport { useFlushingResizeObserver } from \"@/common/resizeObserver\";\nimport { computeGridMargins } from \"@/common/Grid\";\nimport { BucketCanvas, computeNodeBucket, drawBuckets, genBucketsJsx, randomPointInBucket, useBucketCanvas } from \"./buckets\";\nimport { foreachNaryString } from \"@/common/mathUtils\";\nimport { drawNode, GraphNodeType } from \"@/common/NodeDrawing\";\nimport { bottomColor, inputColor, midColor, redColor, topColor } from \"@/common/Colors\";\n\nexport default function CompatibilityGraph({\n  graph: colGraph, compatGraph, onColoringChanged\n} : {graph: ColGraph, compatGraph: CompatGraph, onColoringChanged: () => void})\n{\n  let cnv = useBucketCanvas(colGraph);\n\n  let [, bumpCompatGraphVersion] = useReducer(x => x + 1, 0);\n\n\n  function handleMouseDown(e: React.MouseEvent, nodeId: string) {\n    if (!compatGraph) {\n      return;\n    }\n\n    let node = compatGraph.graph.getNodeAttributes(nodeId);\n    if (node && compatGraph) {\n      compatGraph.activeSubgraph[node.bucketIdx] = nodeId;\n      let bucket = compatGraph.buckets[node.bucketIdx];\n\n      for (let nodeIdx = 0; nodeIdx < bucket.length; nodeIdx++) {\n        colGraph.graph.getNodeAttributes(bucket[nodeIdx]).color = triadColorLut[node.coloring[nodeIdx]];\n      }\n      onColoringChanged();\n\n      bumpCompatGraphVersion();\n    }\n  }\n\n  function drawGraph(canvas: React.JSX.Element[], labels: React.JSX.Element[]) {\n    drawBuckets(cnv, canvas, labels);\n\n    compatGraph?.graph.forEachEdge((edgeId, attributes, source, target) => {\n      let src = compatGraph.graph.getNodeAttributes(source);\n      let tgt = compatGraph.graph.getNodeAttributes(target);\n\n\n      let [fromX, fromY] = cnv.grid.toScreen(src.x || 0, src.y || 0);\n      let [toX, toY] = cnv.grid.toScreen(tgt.x || 0, tgt.y || 0);\n\n      let isActive = (compatGraph.activeSubgraph[src.bucketIdx] === source) && (compatGraph.activeSubgraph[tgt.bucketIdx] === target);\n\n      let color = \"gray\";\n      let opacity = 0.3;\n\n      if (isActive) {\n        color = topColor;\n        opacity = 1.0;\n      }\n\n      let line = <line key={'edge_' + edgeId} x1={fromX} y1={fromY} x2={toX} y2={toY} stroke={color} strokeOpacity={opacity} strokeWidth={cnv.zoom * 2} />;\n      canvas.push(line)\n    })\n\n    compatGraph?.graph.forEachNode((nodeId, attributes) => {\n      let color = midColor;\n\n      let active = (compatGraph.activeSubgraph[attributes.bucketIdx] === nodeId);\n      if (active) {\n        color = topColor;\n      }\n\n\n      if (!attributes.proper) {\n        color = active ? redColor : inputColor;\n      }\n\n      drawNode(cnv.zoom, cnv.grid, GraphNodeType.Internal, color, attributes.x, attributes.y, canvas, labels, {\n        onMouseDown: (e: React.MouseEvent) => handleMouseDown(e, nodeId),\n        className: \"cursor-pointer\",\n      });\n    });\n\n  }\n\n  let graphCanvas: React.JSX.Element[] = [];\n  let labels: React.JSX.Element[] = [];\n  drawGraph(graphCanvas, labels);\n\n  return genBucketsJsx(cnv, graphCanvas, labels);\n}\n","// TODO: Deduplicate with construction site.\n\nimport { Vec2 } from \"@/common/mathUtils\";\nimport { drawNode, GraphNodeType } from \"@/common/NodeDrawing\";\nimport { ToolSel } from \"@/common/Toolbar\";\nimport { useState } from \"react\";\nimport { midColor, redColor } from \"../common/Colors\";\nimport { bucketScale, computeNodeBucket, drawBuckets, genBucketsJsx, useBucketCanvas } from \"./buckets\";\nimport { ColGraph, ColGraphEdge, ColGraphNode, CompatGraph, EdgeType, TriadColor, triadColorToColor } from \"./Graph\";\n\ntype AddEdgeInteraction = {\n  fromNode: string,\n};\n\nexport default function GraphEditor({\n  colGraph,\n  compatGraph,\n  onChange = (() => {}),\n  tool\n} : {colGraph: ColGraph, compatGraph: CompatGraph, onChange?: (colGraph: ColGraph, structuralChange: boolean) => void, tool: ToolSel})\n{\n  let cnv = useBucketCanvas(colGraph);\n\n  let [draggedNode, setDraggedNode] = useState<string>();\n  let [edgeInteraction, setEdgeInteraction] = useState<AddEdgeInteraction>();\n  let [mousePos, setMousePos] = useState<Vec2>();\n\n  // NOTE: Calling e.preventDefault is necessary in the mouse handlers, to avoid\n  // Firefox's removing the keyboard focus from the parent interceptor.\n\n  function handleMouseDown(e: React.MouseEvent, nodeId?: string, edgeId?: string) {\n    let [ex, ey] = cnv.getEventPoint(e);\n\n    if (tool === 'insert') {\n      if (nodeId) {\n        // Add an edge\n        setEdgeInteraction({\n          fromNode: nodeId\n        });\n        e.stopPropagation();\n        e.preventDefault();\n      } else {\n        // Add a node.\n        let x = cnv.grid.xFromScreen(ex, ey, false);\n        let y = cnv.grid.yFromScreen(ex, ey, false);\n        let id = \"usrnd_\" + colGraph.getNextId();\n\n        let data: ColGraphNode = { color: TriadColor.Col1, x: x, y: y };\n\n        colGraph.graph.addNode(id, data);\n        onChange(colGraph, true);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    } else if (tool === 'delete') {\n      if (nodeId) {\n        colGraph.graph.dropNode(nodeId);\n        onChange(colGraph, true);\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (edgeId) {\n        colGraph.graph.dropEdge(edgeId);\n        onChange(colGraph, true);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    } else if (tool === 'drag') {\n      if (nodeId) {\n        setDraggedNode(nodeId);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    } else if (tool === 'paint') {\n      if (nodeId) {\n        let node = colGraph.graph.getNodeAttributes(nodeId);\n        node.color = (node.color + 1) % 3;\n        let bucketIdx = computeNodeBucket(colGraph, nodeId);\n        compatGraph.recomputeActiveSubgraph(bucketIdx);\n        onChange(colGraph, false);\n      }\n    }\n  }\n\n  function reassignNodePosition(e: React.MouseEvent) {\n    let [ex, ey] = cnv.getEventPoint(e);\n    let x = cnv.grid.xFromScreen(ex, ey, false);\n    let y = cnv.grid.yFromScreen(ex, ey, false);\n\n    let prevBucketIdx = computeNodeBucket(colGraph, draggedNode!);\n    let draggedData = colGraph.graph.getNodeAttributes(draggedNode);\n    draggedData.x = x;\n    draggedData.y = y;\n    let bucketIdx = computeNodeBucket(colGraph, draggedNode!);\n    onChange(colGraph, prevBucketIdx !== bucketIdx);\n  }\n\n  function handleMouseMove(e: React.MouseEvent) {\n    let [ex, ey] = cnv.getEventPoint(e);\n\n    if (draggedNode) {\n      reassignNodePosition(e);\n    } else if (edgeInteraction) {\n      setEdgeInteraction({\n        fromNode: edgeInteraction.fromNode\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    setMousePos([ex, ey]);\n  }\n\n  function handleMouseUp(e: React.MouseEvent, nodeId?: string) {\n    if (draggedNode) {\n      reassignNodePosition(e);\n      setDraggedNode(undefined);\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    if (edgeInteraction) {\n      if (nodeId) {\n        let newEdge: ColGraphEdge = {\n          type: EdgeType.Disequality\n        };\n        // Prevent self-loops\n        if (edgeInteraction.fromNode !== nodeId) {\n          colGraph.graph.addEdge(edgeInteraction.fromNode, nodeId, newEdge);\n        }\n      }\n\n      onChange(colGraph, true);\n      setEdgeInteraction(undefined);\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  function drawGraph(canvas: React.JSX.Element[], labels: React.JSX.Element[]) {\n    drawBuckets(cnv, canvas, labels);\n\n    colGraph.graph.forEachEdge((edgeId, attributes, source, target) => {\n      let src = colGraph.graph.getNodeAttributes(source);\n      let tgt = colGraph.graph.getNodeAttributes(target);\n\n      let [fromX, fromY] = cnv.grid.toScreen(src.x||0, src.y||0);\n      let [toX, toY] = cnv.grid.toScreen(tgt.x||0, tgt.y||0);\n\n      let proper = (src.color !== tgt.color);\n      let color = proper ? midColor : redColor;\n\n      let cursor = \"\";\n      if (tool === \"delete\") {\n        cursor = \"cursor-pointer\";\n      }\n\n\n      let line = <line className={cursor} key={'edge_'+edgeId} x1={fromX} y1={fromY} x2={toX} y2={toY} stroke={color} strokeWidth={cnv.zoom*2} onMouseDown={e => handleMouseDown(e, undefined, edgeId)} />;\n\n      canvas.push(line);\n    });\n\n    if (edgeInteraction && mousePos) {\n      let src = colGraph.graph.getNodeAttributes(edgeInteraction.fromNode);\n      let [fromX, fromY] = cnv.grid.toScreen(src.x, src.y);\n\n      let line = <line key={\"edgeInteract\"} x1={fromX} y1={fromY} x2={mousePos[0]} y2={mousePos[1]} stroke=\"white\" strokeOpacity={0.5} strokeWidth={cnv.zoom*4} />;\n\n      canvas.push(line);\n    }\n\n    if (tool===\"insert\" && mousePos) {\n      let circ = <circle key=\"ghostCirc\" cx={mousePos[0]} cy={mousePos[1]} r={10} fill={midColor} fillOpacity={0.5} />\n      canvas.push(circ);\n    }\n\n    colGraph.graph.forEachNode((nodeId, attributes) => {\n      let cursor = \"\";\n      if (tool === \"drag\") {\n        cursor = \"cursor-grab\";\n      } else if (tool === \"delete\" || tool === \"paint\") {\n        cursor = \"cursor-pointer\";\n      } else if (tool === \"insert\") {\n        cursor = \"cursor-crosshair\";\n      }\n\n      let color = triadColorToColor(attributes.color);\n\n      drawNode(cnv.zoom, cnv.grid, GraphNodeType.Internal, color, attributes.x || 0, attributes.y || 0, canvas, labels, {\n        className: cursor,\n        onMouseDown: (e: React.MouseEvent) => {handleMouseDown(e, nodeId)},\n        onMouseUp: (e: React.MouseEvent) => {handleMouseUp(e, nodeId)}\n      });\n    });\n  }\n\n  let graphCanvas: React.JSX.Element[] = [];\n  let labels: React.JSX.Element[] = [];\n  drawGraph(graphCanvas, labels);\n\n  return genBucketsJsx(cnv, graphCanvas, labels, handleMouseDown, handleMouseUp, handleMouseMove);\n}"],"names":["useFlushingResizeObserver","target","transitionFlushCounter","setTransitionFlushCounter","useState","counterRef","useRef","size","setSize","useLayoutEffect","current","getBoundingClientRect","useResizeObserver","entry","prev","next","setTimeout","contentRect","enableTransition","useGraphCanvas","ref","dummyRectRef","clientToSvg","x","y","svgPoint","DOMPoint","matrixTransform","getScreenCTM","inverse","getEventPoint","e","clientX","clientY","screenWidth","width","screenHeight","height","FullscreenButton","isFullscreen","setIsFullscreen","_jsx","className","children","Button","icon","Minimize2","Maximize","onClick","document","exitFullscreen","elem","documentElement","requestFullscreen","Share2","Ruler","Move","MousePointerClick","Trash","allTools","name","Pencil","hotkey","Eraser","Paintbrush","GraphToolbar","_ref2","activeTool","onChange","tools","toolButtons","toolSel","tool","find","t","push","tooltip","toUpperCase","slice","centerContents","Toolbar","center","GraphToolbarPanel","_ref3","paintBrush","divRef","_jsxs","tabIndex","onKeyDown","key","preventDefault","onKeyUp","onMouseEnter","focus","onMouseLeave","blur","fitEllipseIntoIceCone","asp","angle","coneX","Math","sin","coneY","cos","rx","cosine","sqrt","fitCircleIntoIceCone","normalize2d","useBucketCanvas","colGraph","graphCnv","coreCircleDiam","margin","computeGridMargins","gridWidths","computeGridLayout","left","right","gridHeights","top","bottom","graphBox","Box","grid","Grid","zoom","min","vertical","graph","genBucketsJsx","cnv","graphCanvas","labels","onMouseDown","onMouseUp","onMouseMove","svg","opacity","stroke","fill","style","flexDirection","bucketAngle","PI","cliqueSize","computeCanonicalBucketEllipse","mainAngle","coneAngle","ry","drawBuckets","canvas","colorScale","getColorScale","gradientId","cliqueIdx","sectorAngle","i","centerAngle","MainGradient","id","color","rotString","toScreen","cx","cy","transform","toScreenCss","CenteredKI","backgroundColor","computeNodeBucket","nodeId","node","getNodeAttributes","atan2","firstBoundary","mod","floor","mapCanonicalEllipseToBucketArea","bucketIdx","rotatePoint","ellipticPoint","r","theta","sampleUniformUnitDisk","ellipticPoissonDiskSet","n","result","R","w","h","points","FastPoissonDiskSampling","shape","radius","length","sort","a","b","lengthSq2d","biggest","length2d","at","Subnet","constructor","order","this","isInput","localX","isOutput","type","GraphNodeType","Input","Output","Internal","isSubOutput","subType","isTerminal","globalX","globalY","localY","topSubnet","bottomSubnet","extent","screenBox","xExtent","yExtent","verticalitySwap","xScale","d3","yScale","toScreenDims","X","Y","gridX","gridY","swappedX","swappedY","xoff","yoff","toScreenBox","box","xFromScreen","screenX","screenY","roundToInt","arguments","undefined","invert","correctIdx","yFromScreen","cellWidth","cellHeight","BenesGrid","rootSubnet","super","totalSize","relativeSizes","ratio","reduce","acc","addend","map","doRouting","Permutation","lut","invLut","Array","swap","toLatex","domain","_","image","join","clipToRange","max","rawIdx","round","allPerms_recurse","unusedNums","perms","unusedList","from","toSorted","unusedNum","delete","add","pop","allPerms","Set","inputColor","outputColor","midColor","topColor","bottomColor","redColor","resolution","interpolator","palette","_ref","x1","y1","x2","y2","offset","stopColor","stopOpacity","TriadColor","triadColorLut","Col1","Col2","Col3","triadColorToColor","col","EdgeType","ColGraph","nextId","Graph","getNextId","CompatGraph","mkNodeId","coloring","toString","buckets","forEachNode","attributes","bucket","foreachNaryString","proper","j","hasEdge","addNode","nodes","nodeA","nodeB","compatible","dataA","dataB","bucketA","bucketB","addEdge","activeSubgraph","getNodeAttribute","recomputeActiveSubgraph","macros","initMacros","katex","macrosTex","globalGroup","KI_","html","dangerouslySetInnerHTML","__html","KI","React","KB","displayMode","m","pad","amount","scale","base","doSomething","digits","incSucc","u","random","v","angleRadians","refFontSize","PermWidget","perm","onPermChanged","xyToIdx","idxToXY","onHover","onLeave","overlayRef","activeDropIndicator","setActiveDropIndicator","dragSource","setDragSource","getRelCoords","clientRect","labelOffset","prescriptions","dropIndicators","preimage","dropIndicatorDims","outputIdx","dropIdx","dropStyle","predrop","postdrop","drop","labelStyle","draggable","onDragStart","classList","remove","fontSize","drawPermArrows","_Fragment","onDragOver","fromIdx","toIdx","onDragLeave","onDrop","move","splice","newPerm","applyTerminalBias","graphNodeTypeToColor","colorType","drawNode","svgList","overlayList","props","_createElement","number","CompatibilityGraph","compatGraph","onColoringChanged","bumpCompatGraphVersion","useReducer","forEachEdge","edgeId","source","src","tgt","fromX","fromY","toX","toY","line","strokeOpacity","strokeWidth","active","nodeIdx","handleMouseDown","drawGraph","GraphEditor","draggedNode","setDraggedNode","edgeInteraction","setEdgeInteraction","mousePos","setMousePos","ex","ey","fromNode","stopPropagation","data","dropNode","dropEdge","reassignNodePosition","prevBucketIdx","draggedData","handleMouseUp","newEdge","Disequality","cursor","circ","fillOpacity"],"sourceRoot":""}