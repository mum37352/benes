{"version":3,"file":"benes.18c1db4f047cb1178be2.js","mappings":"uBAAIA,E,mICeJ,SAASC,EAAUC,EAAWC,GAC5B,IAAIC,EAAU,IAAMF,EAAE,GAClBG,EAASF,EAMb,OALIA,GAAOC,EACTC,GAAUD,EAEVC,GAAUD,EAELC,CACT,CAAC,IAEIC,EAAS,SAATA,GAAS,OAATA,EAAAA,EAAS,aAATA,EAAAA,EAAS,mBAATA,EAAAA,EAAS,eAATA,CAAS,EAATA,GAAS,IAYd,SAASC,EAAiBL,EAAWM,GAEnC,GAAU,IAANN,EACF,OAAoB,IAAhBM,EAAKC,IAAI,GAEJ,CAAC,CAACC,WAAY,CAACJ,EAAUK,MAAOC,MAAO,CAAC,EAAG,IAAK,CAACF,WAAY,CAACJ,EAAUK,MAAOC,MAAO,CAAC,EAAG,KAG1F,CAAC,CAACF,WAAY,CAACJ,EAAUK,MAAOC,MAAO,CAAC,EAAG,IAAK,CAACF,WAAY,CAACJ,EAAUK,MAAOC,MAAO,CAAC,EAAG,KAMrG,IAAIC,EAAY,GAAKX,EAEjBY,EAAqBC,MAAMF,GAE3BG,EAAa,IAAIC,IAAIF,MAAMF,GAAWK,QAI1C,KAAOF,EAAWG,KAAO,GAAG,CAG1B,IAAIC,GAAgB,EACpB,IAAK,IAAIC,KAAML,EAAY,CACzBI,EAAOC,EACP,KACF,CACA,GAAID,EAAO,EAET,MAIF,IAAIE,EAAkB,GAOtB,IANAN,EAAWO,OAAOH,GAClBE,EAAME,KAAKJ,GACXN,EAAMM,GAAQ,CACZV,WAAY,CAACJ,EAAUmB,KACvBb,MAAO,CAACQ,MAED,CACP,IAAIM,EAASJ,EAAMK,QACnB,QAAeC,IAAXF,EACF,MAGF,IACIG,EAAgB,EADNf,EAAMY,GAAQhB,WAAW,GAGnCoB,EAAgB7B,EAAUC,EAAGwB,GAC7BK,EAAiBvB,EAAKwB,OAAO/B,EAAUC,EAAGM,EAAKC,IAAIiB,KAEvD,IAAK,IAAIO,IAAY,CAACH,EAAeC,GAC/Bf,EAAWkB,IAAID,KACjBjB,EAAWO,OAAOU,GAClBnB,EAAMmB,GAAY,CAChBvB,WAAY,CAACmB,GACbjB,MAAO,CAACqB,IAEVX,EAAME,KAAKS,GAGjB,CACF,CAEA,IAAIE,EAAO,CAACpB,MAAMF,EAAU,GAAIE,MAAMF,EAAU,IAChD,IAAK,IAAIuB,EAAW,EAAGA,EAAWvB,EAAWuB,IAAY,CACvD,IAAIC,EAAcD,GAAYvB,EAAU,GACxCsB,EAAKrB,EAAMsB,GAAU1B,WAAW,IAAI2B,GAAe7B,EAAKC,IAAI2B,IAAavB,EAAU,EACrF,CAEA,IAAIyB,EAAcH,EAAKI,KAAI9B,GAAOF,EAAiBL,EAAE,EAAG,IAAIsC,EAAAA,GAAY/B,MAExE,IAAK,IAAIgC,EAAY,EAAGA,EAAY5B,EAAW4B,IAAa,CAC1D,IAAIJ,EAAcI,GAAa5B,EAAU,GACrC6B,EAAa5B,EAAM2B,GACnBE,EAAYD,EAAWhC,WAAW,GAClCkC,EAAWD,EAAU9B,EAAU,EAEnC6B,EAAWhC,WAAWc,QAAQc,EAAYK,GAAWN,GAAa3B,YAClEgC,EAAW9B,MAAMY,QAAQc,EAAYK,GAAWN,GAAazB,MAAM2B,KAAIM,GAAKA,EAAID,IAClF,CAGA,IAAK,IAAIR,EAAW,EAAGA,EAAWvB,EAAWuB,IAAY,CACvD,IAAIU,EAAOhC,EAAMsB,GACjBU,EAAKpC,WAAWc,KAAKsB,EAAKpC,WAAW,IACrCoC,EAAKlC,MAAMY,KAAKhB,EAAKC,IAAI2B,GAC3B,CAEA,OAAOtB,CACT,CAEe,SAASiC,EAAQC,GAQhC,IARiC,MAC/BC,EAAK,SACLC,GAAW,EAAI,UACfC,GAAY,EAAI,gBAChBC,GAAkB,EAAK,UACvBC,GAAY,EAAI,YAChBC,GAAc,GACmHN,EAE7HO,EAAY,GAAGN,EACfO,GAAMC,EAAAA,EAAAA,QAAuB,OAC5BjD,EAAMkD,IAAWC,EAAAA,EAAAA,UAAS,IAAInB,EAAAA,GAAY,IAAIzB,MAAMwC,GAAWrC,WAK/D0C,EAAaC,IAAkBF,EAAAA,EAAAA,WAAkB,GAMtD,SAASG,EAAUC,GACjBF,EAAeE,EACjB,CAEA,SAASC,EAAUD,GAEbH,IAAgBG,GAClBF,GAAgB,EAEpB,CAbID,GAAeL,GACjBM,GAAgB,GAclB,IAAI,KAAC1C,EAAI,iBAAE8C,IAAoBC,EAAAA,EAAAA,GAA0BV,GAErDW,EAAQhD,GAAMgD,OAAS,EACvBC,EAASjD,GAAMiD,QAAU,EAEzBC,EAAS,IAAIC,EAAAA,GAAOrB,EAAO,EAAG,EAAG,SAEjCsB,GAASC,EAAAA,EAAAA,IAAmBrB,EAAWD,GAEvCuB,GAAaC,EAAAA,EAAAA,IAAkBP,EAAO,CAACI,EAAOI,KAAMN,EAAOF,MAAM,EAAGI,EAAOK,QAC3EC,GAAcH,EAAAA,EAAAA,IAAkBN,EAAQ,CAACG,EAAOO,IAAKT,EAAOD,OAAO,EAAGG,EAAOQ,SAE7EC,EAAU,IAAIC,EAAAA,GAAIR,EAAW,GAAII,EAAY,GAAIJ,EAAW,GAAKA,EAAW,GAAII,EAAY,GAAKA,EAAY,IAI7GK,EAAO,IAAIC,EAAAA,GAAUlC,EAAOC,EAAU8B,GAEtCI,EAAOC,KAAKC,IAAIJ,EAAKK,YAAaL,EAAKM,cAAgB,KAEtDC,EAAOC,IAAY/B,EAAAA,EAAAA,UAASV,GACjC,GAAIwC,GAASxC,EAGX,OAFAyC,EAASzC,GACTS,EAAQ,IAAIlB,EAAAA,GAAY,IAAIzB,MAAMwC,GAAWrC,WACtCyE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGT,IAAIC,EAAiB,GACjBC,EAAgB,GAGpB,IAAK,IAAIC,EAAQ,EAAGA,EAAQb,EAAKc,WAAW7B,MAAO4B,IAAS,CAC1D,IAAIE,EAAOf,EAAKc,WAAWC,KAAKF,GAC5BG,EAAUhB,EAAKc,WAAWE,QAAQH,GAEtC,IAAK,IAAII,EAAQ,EAAGA,EAAQjB,EAAKc,WAAW5B,OAAQ+B,KAClDC,EAAAA,EAAAA,IAAShB,EAAMF,EAAMe,GAAMI,EAAAA,EAAAA,IAAqBH,GAAUH,EAAOI,EAAON,EAASC,EAErF,CAEA,SAASQ,EAAiBC,EAAcC,EAAgBC,EAAaC,EAAkBC,EAAqBC,GAC1G,IAAIC,EAAQC,EAAQC,EAASC,EAAU,GASvC,SAASC,EAAQC,EAAiBC,EAAeC,EAAeC,EAAaC,EAAaC,GACxF,IAAKC,EAAIC,GAAMvC,EAAKwC,SAASP,EAAOC,IAASO,EAAIC,GAAM1C,EAAKwC,SAASL,EAAKC,GAC1Ef,EAAM/E,MAAKmE,EAAAA,EAAAA,KAAA,QAAiC6B,KAAIC,KAAIE,KAAIC,KAAMC,cAAe,GAAKN,OAAQA,EAAQO,YAAkB,EAAL1C,GAAzFoB,EAAOU,GAC/B,CAXIN,GACFC,EAASE,EAAUL,EACnBI,EAASE,EAAUL,IAEnBE,EAASG,EAAUN,EACnBI,EAASC,EAAUJ,GASrBM,EAAQ,IAAKR,EAAO9B,KAAM8B,EAAO3B,IAAK2B,EAAO7B,MAAO6B,EAAO3B,IAAK+B,GAEhEI,EAAQ,IAAKR,EAAO9B,KAAM8B,EAAO1B,OAAQ0B,EAAO7B,MAAO6B,EAAO1B,OAAQ+B,GAEtEG,EAAQ,IAAKR,EAAO9B,KAAM8B,EAAO3B,IAAK2B,EAAO7B,MAAO6B,EAAO1B,OAAQgC,GAEnEE,EAAQ,IAAKR,EAAO9B,KAAM8B,EAAO1B,OAAQ0B,EAAO7B,MAAO6B,EAAO3B,IAAKkC,EACrE,CAGA,IAAIe,EAAUxH,EAAiB0C,EAAOzC,GAkEtC,IAAIwH,EAAoB,GACpBC,EAAoB,IAjExB,SAASC,EAAaF,EAAmBC,EAAmB5D,GAC1D,GAAqB,IAAjBA,EAAOpB,MACTqD,EAAiB0B,EAAY3D,EAAO8D,GAAG,MAAO9D,EAAOoC,SAAU2B,EAAAA,GAAUA,EAAAA,IAAU,OAC9E,CACL,IAAIC,EAAYhE,EAAOgE,YACnBC,EAAejE,EAAOiE,eAGtBC,EAAiB,GAALnD,EAEZoD,EAAStD,EAAKuD,YAAYJ,EAAU5B,UACpCiC,EAAYxD,EAAKuD,YAAYH,EAAa7B,UAE1CkC,EAAa,GACbC,EAAgB,GACpB,GAAIhF,GAAe,EAAG,CACpB,IAAId,EAAOiF,EAAQnE,GACfS,EAAOoC,SAAS3B,KAAOhC,EAAKlC,MAAMyD,EAAOoC,SAAS9B,OAClDN,EAAOoC,SAAS1B,QAAUjC,EAAKlC,MAAMyD,EAAOoC,SAAS9B,QACrD7B,EAAKpC,WAAW2H,EAAU5B,SAAS9B,KAAO,KAAOrE,EAAUmB,IAC7DkH,EAAa,GAEbC,EAAgB,GAEpB,CAEAJ,EAAOK,IAAIN,GACXG,EAAUG,IAAIN,GAMdN,EAAWzG,MAAKmE,EAAAA,EAAAA,KAAA,QAAMmD,UAAU,aAAqCC,GAAS,GAAL3D,EAAS4D,GAAS,GAAL5D,EAAS6D,EAAGT,EAAO7D,KAAMuE,EAAGV,EAAO1D,IAAKX,MAAOqE,EAAO5D,MAAQ4D,EAAO7D,KAAMP,OAAQoE,EAAOzD,OAASyD,EAAO1D,IAAKyC,OAAQ,OAAQ4B,KAAM,kBAAmBC,YAAaT,GAAzM,KAAKN,EAAUF,KAEjEF,EAAWzG,MAAKmE,EAAAA,EAAAA,KAAA,QAAMmD,UAAU,aAAwCC,GAAS,GAAL3D,EAAS4D,GAAS,GAAL5D,EAAS6D,EAAGP,EAAU/D,KAAMuE,EAAGR,EAAU5D,IAAKX,MAAOuE,EAAU9D,MAAQ8D,EAAU/D,KAAMP,OAAQsE,EAAU3D,OAAS2D,EAAU5D,IAAKyC,OAAQ,OAAQ4B,KAAM,kBAAmBC,YAAaR,GAA9N,KAAKN,EAAaH,KAGpED,EAAaF,EAAYC,EAAYI,GAErCH,EAAaF,EAAYC,EAAYK,GAIrC,IAAK,IAAIe,EAAY,EAAGA,EAAYhB,EAAUjE,OAAQiF,IAAa,CAEjE,IAAIC,EAAY,IAAIrE,EAAAA,GAAI,EAAG,EAAG,EAAG,GACjCqE,EAAUxE,IAAMuD,EAAUkB,QAAQF,GAClCC,EAAUvE,OAASuD,EAAaiB,QAAQF,GAGxCC,EAAU3E,KAAON,EAAOoC,SAAS9B,KACjC2E,EAAU1E,MAAQyD,EAAU5B,SAAS9B,KACrC2B,EAAiB0B,EAAY3D,EAAO8D,GAAG,SAASkB,EAAU,IAAKC,EAAW5C,EAAAA,GAAUC,EAAAA,IAAa,GAGjG2C,EAAU1E,MAAQP,EAAOoC,SAAS7B,MAClC0E,EAAU3E,KAAO0D,EAAU5B,SAAS7B,MACpC0B,EAAiB0B,EAAY3D,EAAO8D,GAAG,SAASkB,EAAU,IAAKC,EAAW5C,EAAAA,GAAUC,EAAAA,IAAa,EACnG,CACF,CACF,CAKAuB,CAAaF,EAAYC,EAAY/C,EAAKc,YAwD1C,IAAIwD,EAAsB,IAtD1B,SAAqBA,EAAqBzB,EAAsB7H,GAC9D,IAAIW,EAAY,GAAKX,EACrB,IAAIuJ,GAAaC,EAAAA,EAAAA,IAAc7I,GAE/B,IAAK,IAAIuB,EAAW,EAAGA,EAAWvB,EAAWuB,IAAY,CACvD,IAAIuH,EAAYF,EAAWrH,GAEvBU,EAAOiF,EAAQ3F,GAEnB,IAAK,IAAIwH,EAAU,EAAGA,EAAU9G,EAAKpC,WAAWmJ,OAAQD,IAAW,CACjE,IAAKpC,EAAIC,GAAMvC,EAAKwC,SAASkC,EAAS9G,EAAKlC,MAAMgJ,KAC5CjC,EAAIC,GAAM1C,EAAKwC,SAASkC,EAAQ,EAAG9G,EAAKlC,MAAMgJ,EAAQ,IAEvDjH,EAAYG,EAAKpC,WAAWkJ,GAC5BE,EAAY1B,EAAAA,GACXhF,EAEMT,IAAcrC,EAAUmB,IACjCqI,EAAYpD,EAAAA,GACH/D,IAAcrC,EAAUyJ,SACjCD,EAAYnD,EAAAA,IAJZmD,EAAYH,EAAUK,WAOxB,IAAIC,EAAa3G,EACbM,GAAexB,IACjB6H,GAAcA,GAGhBT,EAAahI,MAAKmE,EAAAA,EAAAA,KAAA,QAChB,iBAAe,QAEf6B,GAAIA,EAAIC,GAAIA,EAAIE,GAAIA,EAAIC,GAAIA,EAC5BuB,KAAK,OACLrB,YAAa,EAAE1C,EACf8E,gBAAiBD,EAAa,QAAU,GACxC1C,OAAQuC,EACRK,aAAcA,IAAMrG,EAAU1B,GAC9BgI,aAAcA,IAAMpG,EAAU5B,GAAUiI,SAEvCJ,IACCtE,EAAAA,EAAAA,KAAA,WACE2E,cAAc,oBACdC,OAAO,OACPC,IAAI,KACJC,SAAS,SACTC,YAAY,gBAfX,MAAMtI,KAAYwH,KAkB3B,CACF,CACF,CAKAe,CAAYnB,EAAczB,EAAS9E,GAEnC,IAAI2H,GAAMC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,WAAW3E,MAAOA,EAAOC,OAAQA,EAAOiG,SAAA,EAC/D1E,EAAAA,EAAAA,KAAA,UAAQwC,GAAG,cAAakC,UACtB1E,EAAAA,EAAAA,KAAA,gBACEM,KAAK,eACL6E,cAAc,OACdC,WAAW,IACXC,YAAY,cAEhBH,EAAAA,EAAAA,MAAA,QAAAR,SAAA,EACA1E,EAAAA,EAAAA,KAACsF,EAAAA,GAAY,CAACC,MAAOxE,EAAAA,GAAUyB,GAAG,aAClCxC,EAAAA,EAAAA,KAACsF,EAAAA,GAAY,CAACC,MAAOvE,EAAAA,GAAawB,GAAG,eAIpC9E,GAAa4E,EACbD,EACA7E,GAAaqG,GACd7D,EAAAA,EAAAA,KAAA,KAAGwD,KAAK,QAAQ5B,OAAO,eAAeO,YAAY,MAAKuC,SACpDxE,OAIDsF,GAAaxF,EAAAA,EAAAA,KAACyF,EAAAA,EAAU,CAC1BC,QAAStH,GAAWD,EAAUC,GAAUuH,QAASvH,GAAWC,EAAUD,GACtEqB,KAAMA,EAAMnB,iBAAkBA,EAAkBzD,KAAMA,EAAM+K,cAAe7H,EAASR,SAAUA,EAC9FsI,QAASA,CAACvC,EAAGC,IAAMhE,EAAKuG,YAAYxC,EAAGC,GAAIwC,QAASvL,IAAOwL,EAAAA,EAAAA,IAAkBvG,EAAMF,KAASA,EAAKwC,SAASxC,EAAKc,WAAWS,SAAS7B,MAAOzE,IAAM,KAGlJ,OAAOwF,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,uCAAuC8C,MAAO,CAAEC,WAAYC,EAAAA,GAAiBC,cAAe7I,EAAW,SAAW,OAAOmH,UAC7I1E,EAAAA,EAAAA,KAAA,OAAKmD,UAAU,8BAA6BuB,UAC1CQ,EAAAA,EAAAA,MAAA,OAAKrH,IAAKA,EAAKsF,UAAU,6CAA4CuB,SAAA,CAClEO,EACA9E,EACA3C,GAAagI,QAKtB,C,0EC3XA,SAASa,IACP,IAAKC,EAAYC,IAAiBvI,EAAAA,EAAAA,UAAS,IACtCT,EAAUiJ,IAAexI,EAAAA,EAAAA,WAAS,IAClCR,EAAWiJ,IAAgBzI,EAAAA,EAAAA,WAAS,IACpCN,EAAWgJ,IAAgB1I,EAAAA,EAAAA,WAAS,IACpCP,EAAiBkJ,IAAsB3I,EAAAA,EAAAA,WAAS,IAChDL,EAAaiJ,IAAkB5I,EAAAA,EAAAA,WAAS,GAE7C,OAAOkH,EAAAA,EAAAA,MAAC2B,EAAAA,EAAQ,CAAC1D,UAAU,gBAAeuB,SAAA,EACxC1E,EAAAA,EAAAA,KAAC8G,EAAAA,EAAa,CAACtL,KAAM,GAAI2H,UAAU,kBAAiBuB,UAClD1E,EAAAA,EAAAA,KAAC5C,EAAQ,CAACE,MAAOgJ,EAAY/I,SAAUA,EAAUC,UAAWA,EAAWE,UAAWA,EAAWD,gBAAiBA,EAAiBE,YAAaA,OAE9IqC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAa,CAACtL,KAAM,GAAI2H,UAAU,GAAEuB,UACnCQ,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,oCAAmCuB,SAAA,EAChDQ,EAAAA,EAAAA,MAAA,MAAI/B,UAAU,qCAAoCuB,SAAA,CAAC,SAAOlH,EAAY,UAAY,WAElF0H,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,iDAC4C1E,EAAAA,EAAAA,KAAA,KAAG+G,OAAO,SAASC,IAAI,sBAAsB7D,UAAU,4CAA4C8D,KAAK,qOAAoOvC,SAAC,mBAAkB,QAG9YQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,cACOQ,EAAAA,EAAAA,MAAA,QAAMe,MAAO,CAACV,MAAO2B,EAAAA,IAAYxC,SAAA,EAAC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,oBAAqB,SAAKQ,EAAAA,EAAAA,MAAA,QAAMe,MAAO,CAACV,MAAO6B,EAAAA,IAAa1C,SAAA,EAAC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,qBAAsB,qDAAiD1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,gBAAe,mCAA+B1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,QAGhQQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,4EACuE1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,UAAU,oCAAgC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,qBAWlIQ,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASuB,SAAA,EACtBQ,EAAAA,EAAAA,MAAA,SAAO/B,UAAU,uBAAuBkE,QAAQ,aAAY3C,SAAA,CAAC,UAAM1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,QAG7E1E,EAAAA,EAAAA,KAACsH,EAAAA,EAAW,CAACnE,UAAU,SAASoE,KAAK,aAAaC,MAAOlB,EAAYmB,cAAgBC,IACnF,IAAIC,EAAMD,EAAEF,MACRG,IAAQC,MAAMD,IAChBpB,EAAcoB,EAChB,EACCE,KAAK,UAAUC,aAAW,EAACnI,IAAK,EAAGoI,IAAK,QAE7C7C,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASuB,SAAA,EACtB1E,EAAAA,EAAAA,KAAA,SAAOmD,UAAU,uBAAuBkE,QAAQ,WAAU3C,SAAC,uBAE3D1E,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,CAAC7E,UAAU,SAASqE,MAAOjK,EAAW,WAAa,aAAc0K,SAAWP,GAAWlB,EAAuB,YAAXkB,EAAEF,OAAsBU,QAAS,CAAC,WAAY,oBAIhKhD,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,6DACsD1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,kBAAgB,cAAUQ,EAAAA,EAAAA,MAAA,QAAMe,MAAO,CAACV,MAAO2B,EAAAA,IAAYxC,SAAA,EAAC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,kBAAmB,YAAQQ,EAAAA,EAAAA,MAAA,QAAMe,MAAO,CAACV,MAAO6B,EAAAA,IAAa1C,SAAA,EAAC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,MAAM,mBAAoB,yDAI/NQ,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASuB,SAAA,EACtB1E,EAAAA,EAAAA,KAAA,SAAOmD,UAAU,uBAAuBkE,QAAQ,WAAU3C,SAAC,kBAC3D1E,EAAAA,EAAAA,KAACmI,EAAAA,EAAW,CAACC,QAAS5K,EAAWyK,SAAWP,GAAMjB,EAAaiB,EAAEF,YAGlEhK,IACD0H,EAAAA,EAAAA,MAAAjF,EAAAA,SAAA,CAAAyE,SAAA,EAAEQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,oCAC2B1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAE,aAAgB,4CAAwC1E,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAAAzC,SAAC,SAAQ,QAG3GQ,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASuB,SAAA,EACtB1E,EAAAA,EAAAA,KAAA,SAAOmD,UAAU,uBAAuBkE,QAAQ,WAAU3C,SAAC,oBAE3D1E,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,CAAC7E,UAAU,SAASqE,MAAO/J,EAAkB,YAAc,WAAYwK,SAAWP,GAAWf,EAA8B,aAAXe,EAAEF,OAAuBU,QAAS,CAAC,YAAa,kBAI/KhD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASuB,SAAA,EACtB1E,EAAAA,EAAAA,KAAA,SAAOmD,UAAU,uBAAuBkE,QAAQ,WAAU3C,SAAC,YAE3D1E,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,CAAC7E,UAAU,SAASqE,MAAO7J,EAAc,SAAW,SAAUsK,SAAWP,GAAWd,EAA0B,UAAXc,EAAEF,OAAoBU,QAAS,CAAC,SAAU,yBAUlK,CAGA,MAAMzM,EAAO4M,EAAAA,WAAoBC,SAASC,eAAe,UAEzDC,EAAAA,EAAAA,KACA/M,EAAKgN,QACHzI,EAAAA,EAAAA,KAAC0I,EAAAA,WAAgB,CAAAhE,UACf1E,EAAAA,EAAAA,KAAC2I,EAAAA,GAAkB,CAAAjE,UAEjBQ,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,0CAAyCuB,SAAA,EACtD1E,EAAAA,EAAAA,KAACqG,EAAI,KACLrG,EAAAA,EAAAA,KAAC4I,EAAAA,EAAgB,W,GCvHrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB9M,IAAjB+M,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CAGAH,EAAoBM,EAAID,EHzBpB9O,EAAW,GACfyO,EAAoBO,EAAI,CAAC3O,EAAQ4O,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAItP,EAAS6J,OAAQyF,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYnP,EAASsP,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAASpF,OAAQ2F,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaM,OAAOvO,KAAKuN,EAAoBO,GAAGU,OAAOC,GAASlB,EAAoBO,EAAEW,GAAKV,EAASO,MAC9IP,EAASW,OAAOJ,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbvP,EAAS4P,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACEtN,IAANiO,IAAiBxP,EAASwP,EAC/B,CACD,CACA,OAAOxP,CAnBP,CAJC8O,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAItP,EAAS6J,OAAQyF,EAAI,GAAKtP,EAASsP,EAAI,GAAG,GAAKH,EAAUG,IAAKtP,EAASsP,GAAKtP,EAASsP,EAAI,GACrGtP,EAASsP,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,EIzBdV,EAAoBqB,EAAKjB,IACxB,IAAIkB,EAASlB,GAAUA,EAAOmB,WAC7B,IAAOnB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBwB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdtB,EAAoBwB,EAAI,CAACrB,EAASuB,KACjC,IAAI,IAAIR,KAAOQ,EACX1B,EAAoB2B,EAAED,EAAYR,KAASlB,EAAoB2B,EAAExB,EAASe,IAC5EF,OAAOY,eAAezB,EAASe,EAAK,CAAEW,YAAY,EAAMC,IAAKJ,EAAWR,IAE1E,ECNDlB,EAAoB2B,EAAI,CAACI,EAAKC,IAAUhB,OAAOiB,UAAUC,eAAeC,KAAKJ,EAAKC,GCAlFhC,EAAoBe,EAAI,I,MCKxB,IAAIqB,EAAkB,CACrB,IAAK,EACL,IAAK,GAaNpC,EAAoBO,EAAEQ,EAAKsB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGIvC,EAAUoC,GAHT7B,EAAUiC,EAAaC,GAAWF,EAGhB3B,EAAI,EAC3B,GAAGL,EAASmC,MAAMjJ,GAAgC,IAAxB0I,EAAgB1I,KAAa,CACtD,IAAIuG,KAAYwC,EACZzC,EAAoB2B,EAAEc,EAAaxC,KACrCD,EAAoBM,EAAEL,GAAYwC,EAAYxC,IAGhD,GAAGyC,EAAS,IAAI9Q,EAAS8Q,EAAQ1C,EAClC,CAEA,IADGuC,GAA4BA,EAA2BC,GACrD3B,EAAIL,EAASpF,OAAQyF,IACzBwB,EAAU7B,EAASK,GAChBb,EAAoB2B,EAAES,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOrC,EAAoBO,EAAE3O,EAAO,EAGjCgR,EAAqBC,KAA4C,sCAAIA,KAA4C,uCAAK,GAC1HD,EAAmBE,QAAQR,EAAqBS,KAAK,KAAM,IAC3DH,EAAmB7P,KAAOuP,EAAqBS,KAAK,KAAMH,EAAmB7P,KAAKgQ,KAAKH,G,KC9CvF,IAAII,EAAsBhD,EAAoBO,OAAEpN,EAAW,CAAC,IAAI,IAAI,IAAI,KAAK,IAAO6M,EAAoB,OACxGgD,EAAsBhD,EAAoBO,EAAEyC,E","sources":["webpack://react-ts-tailwind-starter/webpack/runtime/chunk loaded","webpack://react-ts-tailwind-starter/./src/route-benes/BenesNet.tsx","webpack://react-ts-tailwind-starter/./src/route-benes/page.tsx","webpack://react-ts-tailwind-starter/webpack/bootstrap","webpack://react-ts-tailwind-starter/webpack/runtime/compat get default export","webpack://react-ts-tailwind-starter/webpack/runtime/define property getters","webpack://react-ts-tailwind-starter/webpack/runtime/hasOwnProperty shorthand","webpack://react-ts-tailwind-starter/webpack/runtime/runtimeId","webpack://react-ts-tailwind-starter/webpack/runtime/jsonp chunk loading","webpack://react-ts-tailwind-starter/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { useEffect, useLayoutEffect,useRef, useState } from \"react\";\n\nimport useResizeObserver from \"@react-hook/resize-observer\";\nimport * as d3 from \"d3\";\n\nimport { backgroundColor, bottomColor, getColorScale, inputColor, MainGradient, midColor, outputColor, topColor } from \"../common/Colors\";\nimport { KI } from \"../common/katex\";\nimport Permutation, { correctIdx } from \"../common/Permutation\";\nimport { useFlushingResizeObserver } from \"@/common/resizeObserver\";\nimport { BenesGrid, computeGridLayout, computeGridMargins, Subnet } from \"@/common/Grid\";\nimport PermWidget, { refFontSize } from \"@/common/PermWidget\";\nimport { applyTerminalBias, drawNode, graphNodeTypeToColor } from \"@/common/NodeDrawing\";\nimport { Box } from \"@/common/mathUtils\";\n\n\nfunction benesTwin(k: number, idx: number) {\n  let modulus = 2 ** (k-1);\n  let result = idx;\n  if (idx >= modulus) {\n    result -= modulus;\n  } else {\n    result += modulus;\n  }\n  return result;\n}\n\nenum EdgeColor {\n  Top = 0,\n  Bottom = 1,\n  None = 2\n}\n\ntype BenesPath = {\n  edgeColors: EdgeColor[],\n  // Vertex row indices (not coords!) as indexed from the whole net.\n  verts: number[]\n}\n\nfunction routePermutation(k: number, perm: Permutation): BenesPath[] {\n  // Bottom case.\n  if (k === 1) {\n    if (perm.lut[0] === 0) {\n      // Identity permutation.\n      return [{edgeColors: [EdgeColor.None], verts: [0, 0]}, {edgeColors: [EdgeColor.None], verts: [1, 1]}];\n    } else {\n      // (1 2)\n      return [{edgeColors: [EdgeColor.None], verts: [0, 1]}, {edgeColors: [EdgeColor.None], verts: [1, 0]}];\n    }\n  }\n\n  // Generic case.\n\n  let netHeight = 2 ** k;\n\n  let paths: BenesPath[] = Array(netHeight);\n\n  let unexplored = new Set(Array(netHeight).keys());\n\n  // Color in the vertices. Each loop iteration corresponds to a component\n  // of the routing graph.\n  while (unexplored.size > 0) {\n    // Pop any element from the set. Apparently the APIs don't allow \n    // for this without a for loop.\n    let root: number = -1;\n    for (let el of unexplored) {\n      root = el;\n      break;\n    }\n    if (root < 0) {\n      // Done.\n      break;\n    }\n\n    // Do a BFS starting from the root.\n    let queue: number[] = [];\n    unexplored.delete(root);\n    queue.push(root);\n    paths[root] = {\n      edgeColors: [EdgeColor.Top],\n      verts: [root]\n    };\n    for (;;) {\n      let atVert = queue.shift();\n      if (atVert === undefined) {\n        break;\n      }\n\n      let atColor = paths[atVert].edgeColors[0];\n      let neighborColor = 1-atColor;\n\n      let inputNeighbor = benesTwin(k, atVert);\n      let outputNeighbor = perm.invLut[benesTwin(k, perm.lut[atVert])];\n\n      for (let neighbor of [inputNeighbor, outputNeighbor]) {\n        if (unexplored.has(neighbor)) {\n          unexplored.delete(neighbor);\n          paths[neighbor] = {\n            edgeColors: [neighborColor],\n            verts: [neighbor]\n          };\n          queue.push(neighbor);\n        }\n      }\n    }\n  }\n\n  let luts = [Array(netHeight/2), Array(netHeight/2)];\n  for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n    let subInputIdx = inputIdx % (netHeight/2);\n    luts[paths[inputIdx].edgeColors[0]][subInputIdx] = perm.lut[inputIdx] % (netHeight/2);\n  }\n\n  let subRoutings = luts.map(lut => routePermutation(k-1, new Permutation(lut)));\n\n  for (let globalIdx = 0; globalIdx < netHeight; globalIdx++) {\n    let subInputIdx = globalIdx % (netHeight/2);\n    let globalPath = paths[globalIdx];\n    let edgeColor = globalPath.edgeColors[0];\n    let idxShift = edgeColor*netHeight/2;\n\n    globalPath.edgeColors.push(...subRoutings[edgeColor][subInputIdx].edgeColors);\n    globalPath.verts.push(...subRoutings[edgeColor][subInputIdx].verts.map(v => v + idxShift));\n  }\n\n  // Add the final edges.\n  for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n    let path = paths[inputIdx];\n    path.edgeColors.push(path.edgeColors[0]);\n    path.verts.push(perm.lut[inputIdx]);\n  }\n\n  return paths;\n}\n\nexport default function BenesNet({\n  order,\n  vertical = true,\n  doRouting = true,\n  bipartiteColors = false,\n  drawBoxes = true,\n  dottedLines = false\n} : {order: number, vertical?: boolean, doRouting?: boolean, drawBoxes?: boolean, bipartiteColors?: boolean, dottedLines?: boolean})\n{\n  let numInputs = 2**order;\n  let ref = useRef<HTMLDivElement>(null);\n  let [perm, setPerm] = useState(new Permutation([...Array(numInputs).keys()]));\n\n  // Every path gets an integer tracking the number of reasons why it might be hovered.\n  // This is hopefully more robust when paths are close together and if we cannot control\n  // the order in which the events get handled.\n  let [hoveredPath, setHoveredPath] = useState<number>(-1);\n\n  if (hoveredPath >= numInputs) {\n    setHoveredPath(-1);\n  }\n\n  function hoverPath(pathIdx: number) {\n    setHoveredPath(pathIdx);\n  }\n\n  function leavePath(pathIdx: number) {\n    // Hopefully this additional check improves robustness.\n    if (hoveredPath === pathIdx) {\n      setHoveredPath(-1);\n    }\n  }\n\n  let {size, enableTransition} = useFlushingResizeObserver(ref);\n\n  let width = size?.width || 0;\n  let height = size?.height || 0;\n\n  let subnet = new Subnet(order, 0, 0, \"dummy\");\n\n  let margin = computeGridMargins(doRouting, vertical);\n\n  let gridWidths = computeGridLayout(width, [margin.left, subnet.width-1, margin.right]);\n  let gridHeights = computeGridLayout(height, [margin.top, subnet.height-1, margin.bottom]);\n\n  let gridBox = new Box(gridWidths[0], gridHeights[0], gridWidths[0] + gridWidths[1], gridHeights[0] + gridHeights[1]);\n\n\n  //let screenBox = new Box(marginLeft, marginTop, width - marginRight, height - marginBottom);\n  let grid = new BenesGrid(order, vertical, gridBox);\n\n  let zoom = Math.min(grid.cellWidth(), grid.cellHeight()) / 100;\n\n  let [prevK, setPrevK] = useState(order);\n  if (prevK != order) {\n    setPrevK(order);\n    setPerm(new Permutation([...Array(numInputs).keys()]));\n    return <></>;\n  }\n\n  let circles: any[] = [];\n  let labels: any[] = [];\n\n  // Draw grid circles.\n  for (let gridX = 0; gridX < grid.rootSubnet.width; gridX++) {\n    let type = grid.rootSubnet.type(gridX);\n    let subType = grid.rootSubnet.subType(gridX);\n\n    for (let gridY = 0; gridY < grid.rootSubnet.height; gridY++) {\n      drawNode(zoom, grid, type, graphNodeTypeToColor(subType), gridX, gridY, circles, labels);\n    }\n  }\n\n  function connectButterfly(lines: any[], prefix: string, extent: Box, topColor: string, bottomColor: string, isRight: boolean) {\n    let colTop, colBot, colFall, colRise = \"\";\n    if (isRight) {\n      colTop = colFall = topColor;\n      colBot = colRise = bottomColor;\n    } else {\n      colTop = colRise = topColor;\n      colBot = colFall = bottomColor;\n    }\n\n    function putLine(postfix: string, fromX: number, fromY: number, toX: number, toY: number, stroke: string) {\n      let [x1, y1] = grid.toScreen(fromX, fromY), [x2, y2] = grid.toScreen(toX, toY);\n      lines.push(<line key={prefix+postfix} {...{ x1, y1, x2, y2 }} strokeOpacity={0.5} stroke={stroke} strokeWidth={zoom*2} />);\n    }\n\n    // Top line.\n    putLine(\"t\", extent.left, extent.top, extent.right, extent.top, colTop);\n    // Bottom line.\n    putLine(\"b\", extent.left, extent.bottom, extent.right, extent.bottom, colBot);\n    // Falling line.\n    putLine(\"f\", extent.left, extent.top, extent.right, extent.bottom, colFall);\n    // Rising line.\n    putLine(\"r\", extent.left, extent.bottom, extent.right, extent.top, colRise);\n  }\n\n  // TODO: Don't recompute the routing on every render.\n  let routing = routePermutation(order, perm);\n\n  function connectBenes(benesLines: any[], benesRects: any[], subnet: Subnet) {\n    if (subnet.order === 1) {\n      connectButterfly(benesLines, subnet.id+\"but\", subnet.extent(), midColor, midColor, false);\n    } else {\n      let topSubnet = subnet.topSubnet();\n      let bottomSubnet = subnet.bottomSubnet();\n\n      // TODO: Scale this adaptively.\n      let padAmount = zoom*20;\n\n      let topBox = grid.toScreenBox(topSubnet.extent());\n      let bottomBox = grid.toScreenBox(bottomSubnet.extent());\n\n      let topOpacity = 0.2;\n      let bottomOpacity = 0.2;\n      if (hoveredPath >= 0) {\n        let path = routing[hoveredPath];\n        if (subnet.extent().top <= path.verts[subnet.extent().left] &&\n            subnet.extent().bottom >= path.verts[subnet.extent().left] )\n        if (path.edgeColors[topSubnet.extent().left - 1] === EdgeColor.Top) {\n          topOpacity = 0.3;\n        } else {\n          bottomOpacity = 0.3;\n        }\n      }\n\n      topBox.pad(padAmount);\n      bottomBox.pad(padAmount);\n\n      //benesRects.push(<rect key={\"ar\"+topSubnet.id} rx={10} ry={10} x={topBox.left} y={topBox.top} width={topBox.right - topBox.left} height={topBox.bottom - topBox.top} stroke={\"none\"} fill={backgroundColor} fillOpacity={0.8} />)\n      //benesRects.push(<rect key={\"ar\"+bottomSubnet.id} rx={10} ry={10} x={bottomBox.left} y={bottomBox.top} width={bottomBox.right - bottomBox.left} height={bottomBox.bottom - bottomBox.top} stroke={\"none\"} fill={backgroundColor} fillOpacity={0.8} />)\n\n\n      benesRects.push(<rect className=\"transition\" key={\"br\"+topSubnet.id} rx={zoom*10} ry={zoom*10} x={topBox.left} y={topBox.top} width={topBox.right - topBox.left} height={topBox.bottom - topBox.top} stroke={\"none\"} fill={\"url('#topGrad')\"} fillOpacity={topOpacity} />)\n      \n      benesRects.push(<rect className=\"transition\" key={\"br\"+bottomSubnet.id} rx={zoom*10} ry={zoom*10} x={bottomBox.left} y={bottomBox.top} width={bottomBox.right - bottomBox.left} height={bottomBox.bottom - bottomBox.top} stroke={\"none\"} fill={\"url('#botGrad')\"} fillOpacity={bottomOpacity} />)\n\n      // Top subnet.\n      connectBenes(benesLines, benesRects, topSubnet);\n      // Bottom subnet.\n      connectBenes(benesLines, benesRects, bottomSubnet);\n\n      // Draw the butterflies.\n\n      for (let subLocalY = 0; subLocalY < topSubnet.height; subLocalY++) {\n        // Both butterflies have the same vertical extents.\n        let butterfly = new Box(0, 0, 0, 0);\n        butterfly.top = topSubnet.globalY(subLocalY);\n        butterfly.bottom = bottomSubnet.globalY(subLocalY);\n\n        // Left butterfly\n        butterfly.left = subnet.extent().left;\n        butterfly.right = topSubnet.extent().left;\n        connectButterfly(benesLines, subnet.id+\"_butt_\"+subLocalY+\"_\", butterfly, topColor, bottomColor, false);\n\n        // Right butterfly\n        butterfly.right = subnet.extent().right;\n        butterfly.left = topSubnet.extent().right;\n        connectButterfly(benesLines, subnet.id+\"_butb_\"+subLocalY+\"_\", butterfly, topColor, bottomColor, true);\n      }\n    }\n  }\n\n\n  let benesLines: any[] = [];\n  let benesRects: any[] = [];\n  connectBenes(benesLines, benesRects, grid.rootSubnet);\n  \n  function drawRouting(routingLines: any[], routing: BenesPath[], k: number) {\n    let netHeight = 2 ** k;\n    var colorScale = getColorScale(netHeight);\n  \n    for (let inputIdx = 0; inputIdx < netHeight; inputIdx++) {\n      let pathColor = colorScale(inputIdx);\n\n      let path = routing[inputIdx];\n\n      for (let edgeIdx = 0; edgeIdx < path.edgeColors.length; edgeIdx++) {\n        let [x1, y1] = grid.toScreen(edgeIdx, path.verts[edgeIdx]);\n        let [x2, y2] = grid.toScreen(edgeIdx+1, path.verts[edgeIdx+1]);\n\n        let edgeColor = path.edgeColors[edgeIdx];\n        let lineColor = midColor;\n        if (!bipartiteColors) {\n          lineColor = pathColor.toString();\n        } else if (edgeColor === EdgeColor.Top) {\n          lineColor = topColor;\n        } else if (edgeColor === EdgeColor.Bottom) {\n          lineColor = bottomColor;\n        }\n\n        let dottedLine = dottedLines;\n        if (hoveredPath == inputIdx) {\n          dottedLine = !dottedLine;\n        }\n\n        routingLines.push(<line\n          stroke-linecap=\"round\"\n          key={`rt_${inputIdx}_${edgeIdx}`}\n          x1={x1} y1={y1} x2={x2} y2={y2}\n          fill=\"none\"\n          strokeWidth={6*zoom}\n          strokeDasharray={dottedLine ? \"10,30\" : \"\"}\n          stroke={lineColor}\n          onMouseEnter={() => hoverPath(inputIdx)}\n          onMouseLeave={() => leavePath(inputIdx)}\n        >\n          {dottedLine &&\n            <animate\n              attributeName=\"stroke-dashoffset\"\n              values=\"40;0\"\n              dur=\"3s\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\" />\n          }\n        </line>);\n      }\n    }\n  }\n\n\n\n  let routingLines: any[] = [];\n  drawRouting(routingLines, routing, order);\n\n  let svg = <svg className=\"absolute\" width={width} height={height}>\n    <filter id='noiseFilter'>\n      <feTurbulence\n        type='fractalNoise'\n        baseFrequency='3.76'\n        numOctaves='3'\n        stitchTiles='stitch' />\n    </filter>\n    <defs>\n    <MainGradient color={topColor} id=\"topGrad\" />\n    <MainGradient color={bottomColor} id=\"botGrad\" />\n\n  </defs>\n\n    {drawBoxes && benesRects}\n    {benesLines}\n    {doRouting && routingLines}\n    <g fill=\"white\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n      {circles}\n    </g>\n  </svg>;\n\n  let permWidget = <PermWidget \n    onHover={pathIdx => hoverPath(pathIdx)} onLeave={pathIdx => leavePath(pathIdx)}\n    zoom={zoom} enableTransition={enableTransition} perm={perm} onPermChanged={setPerm} vertical={vertical} \n    xyToIdx={(x, y) => grid.yFromScreen(x, y)} idxToXY={idx => applyTerminalBias(zoom, grid, ...grid.toScreen(grid.rootSubnet.extent().right, idx), false)} />\n        \n\n  return <div className=\"flex items-stretch w-full h-full p-1\" style={{ background: backgroundColor, flexDirection: vertical ? \"column\" : \"row\"}}>\n    <div className=\"flex grow items-stretch p-1\">\n      <div ref={ref} className=\"relative flex grow p-0 m-0 overflow-hidden\">\n        {svg}\n        {labels}\n        {doRouting && permWidget}\n        </div>\n    </div>\n  </div>\n    ;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport '@/styles/index.css';\nimport \"primereact/resources/themes/lara-dark-teal/theme.css\";\n\nimport { useState } from \"react\";\nimport BenesNet from \"./BenesNet\";\nimport { Splitter, SplitterPanel } from 'primereact/splitter';\nimport { InputNumber, InputNumberValueChangeEvent } from 'primereact/inputnumber';\nimport { PrimeReactProvider } from 'primereact/api';\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { initMacros, KI } from \"../common/katex\";\nimport { inputColor, outputColor } from \"../common/Colors\";\nimport { Maximize, Minimize2 } from 'lucide-react';\nimport { Button } from 'primereact/button';\nimport { FullscreenButton } from '@/common/FullscreenButton';\n\nfunction Main() {\n  let [benesOrder, setBenesOrder] = useState(3);\n  let [vertical, setVertical] = useState(true);\n  let [doRouting, setDoRouting] = useState(false);\n  let [drawBoxes, setDrawBoxes] = useState(true);\n  let [bipartiteColors, setBipartiteColors] = useState(false);\n  let [dottedLines, setDottedLines] = useState(false);\n\n  return <Splitter className=\"h-full w-full\">\n    <SplitterPanel size={75} className=\"overflow-hidden\">\n      <BenesNet order={benesOrder} vertical={vertical} doRouting={doRouting} drawBoxes={drawBoxes} bipartiteColors={bipartiteColors} dottedLines={dottedLines} />\n    </SplitterPanel>\n    <SplitterPanel size={25} className=\"\">\n      <div className=\"pl-7 pr-7 space-y-4 overflow-auto\">\n        <h1 className=\"text-xl font-bold my-4 font-italic\">Beneš {doRouting ? \"Routing\" : \"Nets\"}</h1>\n\n        <p>\n          This is an interactive demo of the so-called <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline text-sky-300 hover:text-sky-200\" href=\"https://eng.libretexts.org/Bookshelves/Computer_Science/Programming_and_Computation_Fundamentals/Mathematics_for_Computer_Science_(Lehman_Leighton_and_Meyer)/02%3A_Structures/10%3A_Communication_Networks/10.09%3A_Benes_Network\">Beneš networks</a>.\n        </p>\n\n        <p>\n        They have <span style={{color: inputColor}}><KI>n</KI> \"input nodes\"</span> and <span style={{color: outputColor}}><KI>n</KI> \"output nodes\"</span> (indicated as big circles). In total, they have <KI>2 n \\log n</KI> nodes and a maximum degree of <KI>4</KI>.\n        </p>\n\n        <p>\n          They have a recursive structure, as indicated by the boxes. That is why <KI>n=2^k</KI> is a power of two. We refer to <KI>k</KI> as the order.\n        </p>\n\n        {/* Comment out the switch for drawing the boxes.*/ /*\n\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Draw boxes:</label>\n          <InputSwitch checked={drawBoxes} onChange={(e) => setDrawBoxes(e.value)} />\n        </div>\n        */}\n        \n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"benesOrder\">Order <KI>k</KI>:</label>\n\n\n          <InputNumber className=\"w-full\" name=\"benesOrder\" value={benesOrder} onValueChange={(e: InputNumberValueChangeEvent) => {\n            let val = e.value;\n            if (val && !isNaN(val)) {\n              setBenesOrder(val)\n            }\n          }} mode=\"decimal\" showButtons min={1} max={6} />\n        </div>\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Layout direction:</label>\n\n          <SelectButton className=\"w-full\" value={vertical ? \"Vertical\" : \"Horizontal\"} onChange={(e: any) => setVertical(e.value == \"Vertical\")} options={[\"Vertical\", \"Horizontal\"]} />\n        </div>\n\n\n        <p>\n        Beneš nets satisfy the following property: Any bijection <KI>\\pi \\in S_n</KI> from its <span style={{color: inputColor}}><KI>n</KI> input nodes</span> to its <span style={{color: outputColor}}><KI>n</KI> output nodes</span> can be realized by vertex-disjoint paths.\n        Try it!\n        </p>\n\n        <div className=\"text-sm\">\n          <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Show routes:</label>\n          <InputSwitch checked={doRouting} onChange={(e) => setDoRouting(e.value)} />\n        </div>\n\n        {doRouting &&\n        <><p>\n        Click on any prescription arrow <KI>{\"\\\\mapsto\"}</KI> and drag it to configure the bijection <KI>\\pi</KI>.\n      </p>\n\n      <div className=\"text-sm\">\n        <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Path coloring:</label>\n\n        <SelectButton className=\"w-full\" value={bipartiteColors ? \"Bipartite\" : \"Pathwise\"} onChange={(e: any) => setBipartiteColors(e.value == \"Bipartite\")} options={[\"Bipartite\", \"Pathwise\"]} />\n      </div>\n\n      \n      <div className=\"text-sm\">\n        <label className=\"block mb-1 font-bold\" htmlFor=\"vertical\">Lines:</label>\n\n        <SelectButton className=\"w-full\" value={dottedLines ? \"Dotted\" : \"Simple\"} onChange={(e: any) => setDottedLines(e.value == \"Dotted\")} options={[\"Simple\", \"Dotted\"]} />\n      </div>\n        </>\n\n        }\n\n      \n      </div>\n    </SplitterPanel>\n  </Splitter>;\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\n\ninitMacros();\nroot.render(\n  <React.StrictMode>\n    <PrimeReactProvider>\n      {/* A fixed pos seems to be necessary to get rid of some strange scrollbars */}\n      <div className=\"fixed flex overflow-hidden h-dvh w-full\">\n        <Main />\n        <FullscreenButton />\n      </div>\n    </PrimeReactProvider>\n  </React.StrictMode>\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = 222;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t222: 0,\n\t869: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_ts_tailwind_starter\"] = self[\"webpackChunkreact_ts_tailwind_starter\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [869,967,810,76], () => (__webpack_require__(456)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","benesTwin","k","idx","modulus","result","EdgeColor","routePermutation","perm","lut","edgeColors","None","verts","netHeight","paths","Array","unexplored","Set","keys","size","root","el","queue","delete","push","Top","atVert","shift","undefined","neighborColor","inputNeighbor","outputNeighbor","invLut","neighbor","has","luts","inputIdx","subInputIdx","subRoutings","map","Permutation","globalIdx","globalPath","edgeColor","idxShift","v","path","BenesNet","_ref","order","vertical","doRouting","bipartiteColors","drawBoxes","dottedLines","numInputs","ref","useRef","setPerm","useState","hoveredPath","setHoveredPath","hoverPath","pathIdx","leavePath","enableTransition","useFlushingResizeObserver","width","height","subnet","Subnet","margin","computeGridMargins","gridWidths","computeGridLayout","left","right","gridHeights","top","bottom","gridBox","Box","grid","BenesGrid","zoom","Math","min","cellWidth","cellHeight","prevK","setPrevK","_jsx","_Fragment","circles","labels","gridX","rootSubnet","type","subType","gridY","drawNode","graphNodeTypeToColor","connectButterfly","lines","prefix","extent","topColor","bottomColor","isRight","colTop","colBot","colFall","colRise","putLine","postfix","fromX","fromY","toX","toY","stroke","x1","y1","toScreen","x2","y2","strokeOpacity","strokeWidth","routing","benesLines","benesRects","connectBenes","id","midColor","topSubnet","bottomSubnet","padAmount","topBox","toScreenBox","bottomBox","topOpacity","bottomOpacity","pad","className","rx","ry","x","y","fill","fillOpacity","subLocalY","butterfly","globalY","routingLines","colorScale","getColorScale","pathColor","edgeIdx","length","lineColor","Bottom","toString","dottedLine","strokeDasharray","onMouseEnter","onMouseLeave","children","attributeName","values","dur","calcMode","repeatCount","drawRouting","svg","_jsxs","baseFrequency","numOctaves","stitchTiles","MainGradient","color","permWidget","PermWidget","onHover","onLeave","onPermChanged","xyToIdx","yFromScreen","idxToXY","applyTerminalBias","style","background","backgroundColor","flexDirection","Main","benesOrder","setBenesOrder","setVertical","setDoRouting","setDrawBoxes","setBipartiteColors","setDottedLines","Splitter","SplitterPanel","target","rel","href","inputColor","KI","outputColor","htmlFor","InputNumber","name","value","onValueChange","e","val","isNaN","mode","showButtons","max","SelectButton","onChange","options","InputSwitch","checked","ReactDOM","document","getElementById","initMacros","render","React","PrimeReactProvider","FullscreenButton","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}